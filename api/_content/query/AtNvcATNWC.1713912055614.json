[{"_path":"/blog/nuxt/adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Tailwind CSS to Nuxt 3 üçÉ (2024)","description":"Getting started with Tailwind CSS for utility-first styling.","slug":"adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-tailwind-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5hmki02dbl8xwt820vj.png","publishedAt":"2024-04-22T21:30:00.000Z","tags":"nuxt, nuxt3, tailwindcss","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Nuxt Tailwind, a package for the Tailwind CSS library."}]},{"type":"element","tag":"h2","props":{"id":"tailwind"},"children":[{"type":"text","value":"Tailwind"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind is a powerful tool for rapidly styling modern web applications using "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"utility-first"}]},{"type":"text","value":" CSS. This is an approach to styling that uses pre-defined classes to style HTML elements."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When combined with component-based web frameworks (e.g. React, Vue), this issue is minimised."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind isn't just a quick and effective way of writing CSS; it's also great to build with, due to a variety of development features:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Easy configuration of the built-in utilities"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Just-in-Time compiler to avoid build times entirely"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Plugins ecosystem (Typography, Forms, etc.)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Official documentation for using Tailwind with Nuxt can be found "},{"type":"element","tag":"a","props":{"href":"https://nuxt.com/modules/tailwindcss","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the package:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add --dev @nuxtjs/tailwindcss\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev @nuxtjs/tailwindcss\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxtjs/tailwindcss\",\n    // ...\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxtjs/tailwindcss\",\n    // ...\n  ],\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You may optionally create a configuration file:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"npx tailwindcss init\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npx tailwindcss init\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And just like that, you can now start adding Tailwind classes to your Nuxt components!"}]},{"type":"element","tag":"h3","props":{"id":"prettier-integration"},"children":[{"type":"text","value":"Prettier integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're using Prettier from earlier in the series, you should also add its Tailwind plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"yarn add --dev prettier-plugin-tailwindcss\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev prettier-plugin-tailwindcss\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will give you automatic class sorting which is incredibly useful for organisation, especially when using lots of classes in one element (e.g. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"hover:"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"dark:"}]},{"type":"text","value":"). It should work automatically thanks to Prettier‚Äôs "},{"type":"element","tag":"a","props":{"href":"https://prettier.io/docs/en/plugins.html","rel":["nofollow"]},"children":[{"type":"text","value":"autoloading convention"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"classes"},"children":[{"type":"text","value":"Classes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get started, add some of Tailwind's in-built utilities to an element's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" attribute."}]},{"type":"element","tag":"pre","props":{"className":["language-vue"],"code":"<template>\n  <NuxtLink\n    to=\"/\"\n    class=\"font-semibold text-gray-50 hover:text-gray-400 duration-100\"\n  >\n    Home\n  </NuxtLink>\n</template>\n","language":"vue","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <NuxtLink\n    to=\"/\"\n    class=\"font-semibold text-gray-50 hover:text-gray-400 duration-100\"\n  >\n    Home\n  </NuxtLink>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New to Tailwind? Your best bet is to check out the "},{"type":"element","tag":"a","props":{"href":"https://tailwindcss.com/docs/utility-first","rel":["nofollow"]},"children":[{"type":"text","value":"Tailwind docs"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"tailwind.config.js"}]},{"type":"text","value":" file at the root of your project to configure the default theme."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"module.exports = {\n  theme: {\n    screens: {\n      sm: \"640px\",\n      md: \"768px\",\n      lg: \"1024px\",\n      xl: \"1280px\",\n    },\n    extend: {\n      colors: {\n        linkedin: {\n          primary: \"#0A66C2\",\n          lighter: \"#378fe9\",\n          darker: \"#004182\",\n        },\n      },\n    },\n  },\n  plugins: [require(\"@tailwindcss/typography\")],\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"module.exports = {\n  theme: {\n    screens: {\n      sm: \"640px\",\n      md: \"768px\",\n      lg: \"1024px\",\n      xl: \"1280px\",\n    },\n    extend: {\n      colors: {\n        linkedin: {\n          primary: \"#0A66C2\",\n          lighter: \"#378fe9\",\n          darker: \"#004182\",\n        },\n      },\n    },\n  },\n  plugins: [require(\"@tailwindcss/typography\")],\n};\n"}]}]},{"type":"element","tag":"h2","props":{"id":"viewer"},"children":[{"type":"text","value":"Viewer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt Tailwind exposes a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/_tailwind/"}]},{"type":"text","value":" route in development where your Tailwind configuration is rendered as a library."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"May your web apps become colourful and flashy üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"tailwind","depth":2,"text":"Tailwind"},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"prettier-integration","depth":3,"text":"Prettier integration"}]},{"id":"classes","depth":2,"text":"Classes"},{"id":"configuration","depth":2,"text":"Configuration"},{"id":"viewer","depth":2,"text":"Viewer"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling.md","_source":"content","_file":"blog/nuxt/adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling.md","_extension":"md"},{"_path":"/blog/nuxt/adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding ESLint and Prettier to Nuxt 3 ‚ú® (2024)","description":"Getting started with ESLint and Prettier for automatic code linting and formatting.","slug":"adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-eslint-prettier-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vzpr7348dutp0fu8dxb.png","publishedAt":"2024-04-16T22:20:00.000Z","tags":"nuxt, nuxt3, eslint, prettier","published":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"üéâ Update (April 2024): This tutorial now uses the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@nuxt/eslint"}]},{"type":"text","value":" module."}]},{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce ESLint and Prettier for automatic code style formatting in your Nuxt 3 project."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ESLint"}]},{"type":"text","value":" is a linter that helps to enforce code quality through standards and patterns, such as flagging unused variables, disallowing globals, and requiring Error objects as Promise rejection reasons."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Prettier"}]},{"type":"text","value":" is a formatter that helps in tidying up documents, such as maximum line length, mixed spaces and tabs, keyword spacing, and comma style."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By using these tools together, we can spend more of our development time on our actual code, instead of nitpicking a file's indenting, casing and bracket placement."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"h3","props":{"id":"packages"},"children":[{"type":"text","value":"Packages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the following dependencies:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"# ESLint\nyarn add --dev @nuxt/eslint eslint typescript\n\n# Prettier\nyarn add --dev eslint-plugin-prettier eslint-config-prettier prettier\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# ESLint\nyarn add --dev @nuxt/eslint eslint typescript\n\n# Prettier\nyarn add --dev eslint-plugin-prettier eslint-config-prettier prettier\n"}]}]},{"type":"element","tag":"h3","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@nuxt/eslint"}]},{"type":"text","value":" module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxt/eslint\",\n    // ...\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxt/eslint\",\n    // ...\n  ],\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn dev"}]},{"type":"text","value":" to generate an initial ESLint configuration file ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"eslint.config.mjs"}]},{"type":"text","value":"), which will look like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// eslint.config.mjs\n\nimport withNuxt from \"./.nuxt/eslint.config.mjs\";\n\nexport default withNuxt();\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// eslint.config.mjs\n\nimport withNuxt from \"./.nuxt/eslint.config.mjs\";\n\nexport default withNuxt();\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you already have a flat configuration file for ESLint that you would like to use, it can be passed as an argument to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"withNuxt()"}]},{"type":"text","value":".\nYou can explore more configuration options here: "},{"type":"element","tag":"a","props":{"href":"https://eslint.nuxt.com/packages/module","rel":["nofollow"]},"children":[{"type":"text","value":"https://eslint.nuxt.com/packages/module"}]}]}]},{"type":"element","tag":"h3","props":{"id":"scripts"},"children":[{"type":"text","value":"Scripts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the following scripts to your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"package.json"}]},{"type":"text","value":" file:"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// package.json\n\n{\n  \"scripts\": {\n    // ...\n    \"lint\": \"yarn lint:eslint && yarn lint:prettier\",\n    \"lint:eslint\": \"eslint .\",\n    \"lint:prettier\": \"prettier . --check\",\n    \"lintfix\": \"eslint . --fix && prettier --write --list-different .\"\n    // ...\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// package.json\n\n{\n  \"scripts\": {\n    // ...\n    \"lint\": \"yarn lint:eslint && yarn lint:prettier\",\n    \"lint:eslint\": \"eslint .\",\n    \"lint:prettier\": \"prettier . --check\",\n    \"lintfix\": \"eslint . --fix && prettier --write --list-different .\"\n    // ...\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"text","value":"Usage"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To check for errors, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lint"}]},{"type":"text","value":". This won't effect any changes, and may be useful in a code review or CI pipeline."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> [warn] app.vue\n>>> [warn] Code style issues found in the above file. Run Prettier to fix.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> [warn] app.vue\n>>> [warn] Code style issues found in the above file. Run Prettier to fix.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To fix errors, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lintfix"}]},{"type":"text","value":". This will save any formatting changes."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lintfix\n\n>>> yarn run v1.22.5\n>>> $ prettier --write --list-different . && eslint . --fix\n>>> app.vue\n>>> Done in 2.59s.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lintfix\n\n>>> yarn run v1.22.5\n>>> $ prettier --write --list-different . && eslint . --fix\n>>> app.vue\n>>> Done in 2.59s.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lintfix"}]},{"type":"text","value":", invoking "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lint"}]},{"type":"text","value":" should be successful."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> All matched files use Prettier code style!\n>>> Done in 3.07s.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> All matched files use Prettier code style!\n>>> Done in 3.07s.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All done!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can hopefully now avoid the nitpicking arguments üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"packages","depth":3,"text":"Packages"},{"id":"configuration","depth":3,"text":"Configuration"},{"id":"scripts","depth":3,"text":"Scripts"}]},{"id":"usage","depth":2,"text":"Usage"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting.md","_source":"content","_file":"blog/nuxt/adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting.md","_extension":"md"},{"_path":"/blog/nuxt/adding-vitest-to-nuxt-3-tutorial-unit-testing","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Vitest to Nuxt 3 ‚ö° (2023)","description":"Getting started with Vitest for blazing-fast unit tests.","slug":"adding-vitest-to-nuxt-3-tutorial-unit-testing","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-vitest-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlnkh4kjkjq6u0yqz54e.png","publishedAt":"2023-01-05T09:00:00.000Z","tags":"nuxt, nuxt3, vitest, testing","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Vitest for blazing-fast unit tests in your Nuxt 3 project."}]},{"type":"element","tag":"h2","props":{"id":"testing"},"children":[{"type":"text","value":"Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unit tests are important for ensuring that your code is working correctly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is especially important when making changes to your code, as you can ensure that you haven't introduced any new bugs or problems to existing features. Or, at least to the extent that these features have been covered by tests."}]},{"type":"element","tag":"h3","props":{"id":"vitest"},"children":[{"type":"text","value":"Vitest"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vitest is a test runner based on Vite, an alternative module bundler to webpack which Nuxt 3 uses by default."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's incredibly similar to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Jest"}]},{"type":"text","value":", and often considered a drop-in replacement for it."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"h3","props":{"id":"packages"},"children":[{"type":"text","value":"Packages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the following dependencies:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"# Vitest\nyarn add --dev vitest jsdom @vitejs/plugin-vue\n\n# Test utils\nyarn add --dev @vue/test-utils @nuxt/test-utils\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# Vitest\nyarn add --dev vitest jsdom @vitejs/plugin-vue\n\n# Test utils\nyarn add --dev @vue/test-utils @nuxt/test-utils\n"}]}]},{"type":"element","tag":"h3","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create your Vitest configuration file ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"vitest.config.js"}]},{"type":"text","value":"):"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// vitest.config.js\n\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\n\nexport default defineConfig({\n  plugins: [vue()],\n  test: {\n    globals: true,\n    environment: \"jsdom\",\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// vitest.config.js\n\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\n\nexport default defineConfig({\n  plugins: [vue()],\n  test: {\n    globals: true,\n    environment: \"jsdom\",\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"eslint-integration"},"children":[{"type":"text","value":"ESLint integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're using ESLint from earlier in the series, you should also add its Vitest plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add --dev eslint-plugin-vitest\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev eslint-plugin-vitest\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, modify your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".eslintrc.cjs"}]},{"type":"text","value":" file to add the plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// .eslintrc.cjs\n\nmodule.exports = {\n  // ...\n  plugins: [\"vitest\"],\n  // ...\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// .eslintrc.cjs\n\nmodule.exports = {\n  // ...\n  plugins: [\"vitest\"],\n  // ...\n};\n"}]}]},{"type":"element","tag":"h3","props":{"id":"scripts"},"children":[{"type":"text","value":"Scripts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the following script to your project:"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// package.json\n\n{\n  // ...\n  \"scripts\": {\n    // ...\n    \"test\": \"vitest\"\n    // ...\n  }\n  // ...\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// package.json\n\n{\n  // ...\n  \"scripts\": {\n    // ...\n    \"test\": \"vitest\"\n    // ...\n  }\n  // ...\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"text","value":"Usage"}]},{"type":"element","tag":"h3","props":{"id":"creating-tests"},"children":[{"type":"text","value":"Creating tests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At this point, you should use a learning resource such as "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=cM_AeQHzlGg","rel":["nofollow"]},"children":[{"type":"text","value":"Testing with Vitest"}]},{"type":"text","value":" to get started."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A test may look something like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// tests/HelloWorld.spec.ts\nimport { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\n\nimport HelloWorld from \"../components/HelloWorld.vue\";\n\ndescribe(\"HelloWorld\", () => {\n  it(\"is a Vue instance\", () => {\n    const wrapper = mount(HelloWorld);\n    expect(wrapper.vm).toBeTruthy();\n  });\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// tests/HelloWorld.spec.ts\nimport { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\n\nimport HelloWorld from \"../components/HelloWorld.vue\";\n\ndescribe(\"HelloWorld\", () => {\n  it(\"is a Vue instance\", () => {\n    const wrapper = mount(HelloWorld);\n    expect(wrapper.vm).toBeTruthy();\n  });\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"running-tests"},"children":[{"type":"text","value":"Running tests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To run your unit tests, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn test"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn test\n\n>>> yarn run v1.22.5\n>>> $ vitest\n>>>\n>>>  DEV  v0.26.3 ~/Documents/GitHub/nuxt-app\n>>>\n>>>  ‚úì tests/HelloWorld.spec.ts (1)\n>>>\n>>>  Test Files  1 passed (1)\n>>>       Tests  1 passed (1)\n>>>    Start at  23:19:54\n>>>    Duration  1.78s (transform 538ms, setup 1ms, collect 154ms, tests 20ms)\n>>>\n>>>\n>>>  PASS  Waiting for file changes...\n>>>        press h to show help, press q to quit\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn test\n\n>>> yarn run v1.22.5\n>>> $ vitest\n>>>\n>>>  DEV  v0.26.3 ~/Documents/GitHub/nuxt-app\n>>>\n>>>  ‚úì tests/HelloWorld.spec.ts (1)\n>>>\n>>>  Test Files  1 passed (1)\n>>>       Tests  1 passed (1)\n>>>    Start at  23:19:54\n>>>    Duration  1.78s (transform 538ms, setup 1ms, collect 154ms, tests 20ms)\n>>>\n>>>\n>>>  PASS  Waiting for file changes...\n>>>        press h to show help, press q to quit\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All done!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now you can start shipping new features in peace üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"testing","depth":2,"text":"Testing","children":[{"id":"vitest","depth":3,"text":"Vitest"}]},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"packages","depth":3,"text":"Packages"},{"id":"configuration","depth":3,"text":"Configuration"},{"id":"eslint-integration","depth":3,"text":"ESLint integration"},{"id":"scripts","depth":3,"text":"Scripts"}]},{"id":"usage","depth":2,"text":"Usage","children":[{"id":"creating-tests","depth":3,"text":"Creating tests"},{"id":"running-tests","depth":3,"text":"Running tests"}]}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-vitest-to-nuxt-3-tutorial-unit-testing.md","_source":"content","_file":"blog/nuxt/adding-vitest-to-nuxt-3-tutorial-unit-testing.md","_extension":"md"},{"_path":"/blog/nuxt/adding-pinia-to-nuxt-3-tutorial-global-state-management","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Pinia to Nuxt 3 üçç (2023)","description":"Getting started with Pinia for global state management.","slug":"adding-pinia-to-nuxt-3-tutorial-global-state-management","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-cover-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eozu62uqnpka4l58nhah.png","publishedAt":"2023-01-04T09:00:00.000Z","tags":"nuxt, nuxt3, pinia","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Pinia, a powerful package for managing your Nuxt app's state in a single place."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whether you're new to state management solutions or experienced with libraries such as Vuex and Redux, Pinia is definitely worth checking out."}]},{"type":"element","tag":"h2","props":{"id":"state-management"},"children":[{"type":"text","value":"State management"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you've ever found yourself aimlessly trying to manage state through props and events, then the idea of a store may sound appealing:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Manage an app's state from a single, centralised store"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Update and retrieve data through simple actions and getters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subscribe to changes to achieve deep reactivity without much work"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This helps to make changes to the app's state predictable and more consistent."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, we can store a counter, and then increment it from anywhere by using its store:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Demo of counter component","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cf2kfethplnmjmvv3oj.gif"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"pinia"},"children":[{"type":"text","value":"Pinia"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia is a state management library for Vue, with an officially-supported module for Nuxt 3 ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@pinia/nuxt"}]},{"type":"text","value":"). It's also the recommended solution for Vue and Nuxt projects."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't just take it from me:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\"Pinia is de facto Vuex 5!\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"‚Äî "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Evan You, creator of Vue"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://twitter.com/youyuxi/status/1463429442076745730","rel":["nofollow"]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What makes it useful for Vue and Nuxt applications?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deep reactivity by default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No explicit mutations (all changes are implicit mutations)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Analogous with Options API:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Actions (equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Getters (equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"computed"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Official documentation for using Pinia with Nuxt can be found "},{"type":"element","tag":"a","props":{"href":"https://nuxt.com/modules/pinia","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the package:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add @pinia/nuxt\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add @pinia/nuxt\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  // ...\n  modules: [\n    // ...\n    \"@pinia/nuxt\",\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  // ...\n  modules: [\n    // ...\n    \"@pinia/nuxt\",\n  ],\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"creating-a-store"},"children":[{"type":"text","value":"Creating a store"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Stores are created in a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stores/"}]},{"type":"text","value":" directory, and defined by using Pinia's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"defineStore"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this example, we have created a store ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useCounterStore"}]},{"type":"text","value":") and given the store a name ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"counter"}]},{"type":"text","value":"). We have then defined our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"state"}]},{"type":"text","value":" property ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"count"}]},{"type":"text","value":") with an initial value."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nimport { defineStore } from \"pinia\";\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nimport { defineStore } from \"pinia\";\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's as simple as that!"}]},{"type":"element","tag":"h2","props":{"id":"using-the-store"},"children":[{"type":"text","value":"Using the store"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia offers a few ways to access the store and maintain reactivity."}]},{"type":"element","tag":"h3","props":{"id":"_1-store-instance"},"children":[{"type":"text","value":"1. Store instance"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In your component's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"setup()"}]},{"type":"text","value":", import the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useStore()"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      store: useCounterStore(),\n    };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      store: useCounterStore(),\n    };\n  },\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can now access state through the store instance:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-computed-properties"},"children":[{"type":"text","value":"2. Computed properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To write cleaner code, you may wish to grab specific properties. However, destructuring the store will break reactivity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead, we can use a computed property to achieve reactivity:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const count = computed(() => store.count);\n\n    return { count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const count = computed(() => store.count);\n\n    return { count };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_3-extract-via-storetorefs"},"children":[{"type":"text","value":"3. Extract via storeToRefs()"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can destructure properties from the store while keeping reactivity through the use of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"storeToRefs()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will create a ref for each reactive property."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const { count } = storeToRefs(store);\n\n    return { count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const { count } = storeToRefs(store);\n\n    return { count };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"actions"},"children":[{"type":"text","value":"Actions"}]},{"type":"element","tag":"h3","props":{"id":"adding-an-action"},"children":[{"type":"text","value":"Adding an action"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Actions are the equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods"}]},{"type":"text","value":" in components, defined in the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"actions"}]},{"type":"text","value":" property."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"using-an-action"},"children":[{"type":"text","value":"Using an action"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In your component, extract the action from the store."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const { increment } = store;\n    const count = computed(() => store.count);\n    return { increment, count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const { increment } = store;\n    const count = computed(() => store.count);\n    return { increment, count };\n  },\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The action can easily be invoked, such as upon a button being clicked:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <button type=\"button\" @click=\"increment\"></button>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <button type=\"button\" @click=\"increment\"></button>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"getters"},"children":[{"type":"text","value":"Getters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Getters are the equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"computed"}]},{"type":"text","value":" in components, defined in the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"getters"}]},{"type":"text","value":" property."}]},{"type":"element","tag":"h3","props":{"id":"adding-a-getter"},"children":[{"type":"text","value":"Adding a getter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia encourages the usage of the arrow function, using the state as the first parameter:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  getters: {\n    getCount: (state) => state.count,\n  },\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  getters: {\n    getCount: (state) => state.count,\n  },\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"using-a-getter"},"children":[{"type":"text","value":"Using a getter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similarly to state properties, getters need to be accessed in a way that maintains reactivity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For instance, you could access it through the store instance:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    return { store };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    return { store };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or, by using a computed property:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const getCount = computed(() => store.getCount);\n\n    return { getCount };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const getCount = computed(() => store.getCount);\n\n    return { getCount };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or, by using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"storeToRefs()"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const { getCount } = storeToRefs(store);\n\n    return { getCount };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const { getCount } = storeToRefs(store);\n\n    return { getCount };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"a-complete-component"},"children":[{"type":"text","value":"A complete component"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since we've discussed actions and getters separately, here is a code snippet that combines both in the style that I recommend:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const getCount = computed(() => store.getCount);\n    const { increment } = store;\n    return { getCount, increment };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const getCount = computed(() => store.getCount);\n    const { increment } = store;\n    return { getCount, increment };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n  <button type=\"button\" @click=\"increment\">Increment</button>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n  <button type=\"button\" @click=\"increment\">Increment</button>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This code has been implemented at "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/nuxt-3-starter/","rel":["nofollow"]},"children":[{"type":"text","value":"lloydtao/nuxt-3-starter/"}]},{"type":"text","value":":"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Demo of counter component","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cf2kfethplnmjmvv3oj.gif"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How do you think your developer experience will be improved? üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"state-management","depth":2,"text":"State management","children":[{"id":"pinia","depth":3,"text":"Pinia"}]},{"id":"installation","depth":2,"text":"Installation"},{"id":"creating-a-store","depth":2,"text":"Creating a store"},{"id":"using-the-store","depth":2,"text":"Using the store","children":[{"id":"_1-store-instance","depth":3,"text":"1. Store instance"},{"id":"_2-computed-properties","depth":3,"text":"2. Computed properties"},{"id":"_3-extract-via-storetorefs","depth":3,"text":"3. Extract via storeToRefs()"}]},{"id":"actions","depth":2,"text":"Actions","children":[{"id":"adding-an-action","depth":3,"text":"Adding an action"},{"id":"using-an-action","depth":3,"text":"Using an action"}]},{"id":"getters","depth":2,"text":"Getters","children":[{"id":"adding-a-getter","depth":3,"text":"Adding a getter"},{"id":"using-a-getter","depth":3,"text":"Using a getter"}]},{"id":"a-complete-component","depth":2,"text":"A complete component"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-pinia-to-nuxt-3-tutorial-global-state-management.md","_source":"content","_file":"blog/nuxt/adding-pinia-to-nuxt-3-tutorial-global-state-management.md","_extension":"md"}]