[{"_path":"/blog/nuxt/adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Tailwind CSS to Nuxt 3 üçÉ (2024)","description":"Getting started with Tailwind CSS for utility-first styling.","slug":"adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-tailwind-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5hmki02dbl8xwt820vj.png","publishedAt":"2024-04-22T21:30:00.000Z","tags":"nuxt, nuxt3, tailwindcss","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Nuxt Tailwind, a package for the Tailwind CSS library."}]},{"type":"element","tag":"h2","props":{"id":"tailwind"},"children":[{"type":"text","value":"Tailwind"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind is a powerful tool for rapidly styling modern web applications using "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"utility-first"}]},{"type":"text","value":" CSS. This is an approach to styling that uses pre-defined classes to style HTML elements."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When combined with component-based web frameworks (e.g. React, Vue), this issue is minimised."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind isn't just a quick and effective way of writing CSS; it's also great to build with, due to a variety of development features:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Easy configuration of the built-in utilities"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Just-in-Time compiler to avoid build times entirely"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Plugins ecosystem (Typography, Forms, etc.)"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Official documentation for using Tailwind with Nuxt can be found "},{"type":"element","tag":"a","props":{"href":"https://nuxt.com/modules/tailwindcss","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the package:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add --dev @nuxtjs/tailwindcss\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev @nuxtjs/tailwindcss\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxtjs/tailwindcss\",\n    // ...\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxtjs/tailwindcss\",\n    // ...\n  ],\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You may optionally create a configuration file:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"npx tailwindcss init\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"npx tailwindcss init\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"And just like that, you can now start adding Tailwind classes to your Nuxt components!"}]},{"type":"element","tag":"h3","props":{"id":"prettier-integration"},"children":[{"type":"text","value":"Prettier integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're using Prettier from earlier in the series, you should also add its Tailwind plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"yarn add --dev prettier-plugin-tailwindcss\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev prettier-plugin-tailwindcss\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will give you automatic class sorting which is incredibly useful for organisation, especially when using lots of classes in one element (e.g. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"hover:"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"dark:"}]},{"type":"text","value":"). It should work automatically thanks to Prettier‚Äôs "},{"type":"element","tag":"a","props":{"href":"https://prettier.io/docs/en/plugins.html","rel":["nofollow"]},"children":[{"type":"text","value":"autoloading convention"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"classes"},"children":[{"type":"text","value":"Classes"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get started, add some of Tailwind's in-built utilities to an element's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"class"}]},{"type":"text","value":" attribute."}]},{"type":"element","tag":"pre","props":{"className":["language-vue"],"code":"<template>\n  <NuxtLink\n    to=\"/\"\n    class=\"font-semibold text-gray-50 hover:text-gray-400 duration-100\"\n  >\n    Home\n  </NuxtLink>\n</template>\n","language":"vue","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<template>\n  <NuxtLink\n    to=\"/\"\n    class=\"font-semibold text-gray-50 hover:text-gray-400 duration-100\"\n  >\n    Home\n  </NuxtLink>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"New to Tailwind? Your best bet is to check out the "},{"type":"element","tag":"a","props":{"href":"https://tailwindcss.com/docs/utility-first","rel":["nofollow"]},"children":[{"type":"text","value":"Tailwind docs"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"tailwind.config.js"}]},{"type":"text","value":" file at the root of your project to configure the default theme."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"module.exports = {\n  theme: {\n    screens: {\n      sm: \"640px\",\n      md: \"768px\",\n      lg: \"1024px\",\n      xl: \"1280px\",\n    },\n    extend: {\n      colors: {\n        linkedin: {\n          primary: \"#0A66C2\",\n          lighter: \"#378fe9\",\n          darker: \"#004182\",\n        },\n      },\n    },\n  },\n  plugins: [require(\"@tailwindcss/typography\")],\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"module.exports = {\n  theme: {\n    screens: {\n      sm: \"640px\",\n      md: \"768px\",\n      lg: \"1024px\",\n      xl: \"1280px\",\n    },\n    extend: {\n      colors: {\n        linkedin: {\n          primary: \"#0A66C2\",\n          lighter: \"#378fe9\",\n          darker: \"#004182\",\n        },\n      },\n    },\n  },\n  plugins: [require(\"@tailwindcss/typography\")],\n};\n"}]}]},{"type":"element","tag":"h2","props":{"id":"viewer"},"children":[{"type":"text","value":"Viewer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt Tailwind exposes a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/_tailwind/"}]},{"type":"text","value":" route in development where your Tailwind configuration is rendered as a library."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"May your web apps become colourful and flashy üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"tailwind","depth":2,"text":"Tailwind"},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"prettier-integration","depth":3,"text":"Prettier integration"}]},{"id":"classes","depth":2,"text":"Classes"},{"id":"configuration","depth":2,"text":"Configuration"},{"id":"viewer","depth":2,"text":"Viewer"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling.md","_source":"content","_file":"blog/nuxt/adding-tailwind-css-to-nuxt-3-tutorial-utility-first-styling.md","_extension":"md"},{"_path":"/blog/nuxt/adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding ESLint and Prettier to Nuxt 3 ‚ú® (2024)","description":"Getting started with ESLint and Prettier for automatic code linting and formatting.","slug":"adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-eslint-prettier-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vzpr7348dutp0fu8dxb.png","publishedAt":"2024-04-16T22:20:00.000Z","tags":"nuxt, nuxt3, eslint, prettier","published":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"üéâ Update (April 2024): This tutorial now uses the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@nuxt/eslint"}]},{"type":"text","value":" module."}]},{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce ESLint and Prettier for automatic code style formatting in your Nuxt 3 project."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ESLint"}]},{"type":"text","value":" is a linter that helps to enforce code quality through standards and patterns, such as flagging unused variables, disallowing globals, and requiring Error objects as Promise rejection reasons."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Prettier"}]},{"type":"text","value":" is a formatter that helps in tidying up documents, such as maximum line length, mixed spaces and tabs, keyword spacing, and comma style."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By using these tools together, we can spend more of our development time on our actual code, instead of nitpicking a file's indenting, casing and bracket placement."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"h3","props":{"id":"packages"},"children":[{"type":"text","value":"Packages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the following dependencies:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"# ESLint\nyarn add --dev @nuxt/eslint eslint typescript\n\n# Prettier\nyarn add --dev eslint-plugin-prettier eslint-config-prettier prettier\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# ESLint\nyarn add --dev @nuxt/eslint eslint typescript\n\n# Prettier\nyarn add --dev eslint-plugin-prettier eslint-config-prettier prettier\n"}]}]},{"type":"element","tag":"h3","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@nuxt/eslint"}]},{"type":"text","value":" module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxt/eslint\",\n    // ...\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  devtools: { enabled: true },\n  modules: [\n    // ...\n    \"@nuxt/eslint\",\n    // ...\n  ],\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Run "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn dev"}]},{"type":"text","value":" to generate an initial ESLint configuration file ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"eslint.config.mjs"}]},{"type":"text","value":"), which will look like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// eslint.config.mjs\n\nimport withNuxt from \"./.nuxt/eslint.config.mjs\";\n\nexport default withNuxt();\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// eslint.config.mjs\n\nimport withNuxt from \"./.nuxt/eslint.config.mjs\";\n\nexport default withNuxt();\n"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you already have a flat configuration file for ESLint that you would like to use, it can be passed as an argument to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"withNuxt()"}]},{"type":"text","value":".\nYou can explore more configuration options here: "},{"type":"element","tag":"a","props":{"href":"https://eslint.nuxt.com/packages/module","rel":["nofollow"]},"children":[{"type":"text","value":"https://eslint.nuxt.com/packages/module"}]}]}]},{"type":"element","tag":"h3","props":{"id":"scripts"},"children":[{"type":"text","value":"Scripts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the following scripts to your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"package.json"}]},{"type":"text","value":" file:"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// package.json\n\n{\n  \"scripts\": {\n    // ...\n    \"lint\": \"yarn lint:eslint && yarn lint:prettier\",\n    \"lint:eslint\": \"eslint .\",\n    \"lint:prettier\": \"prettier . --check\",\n    \"lintfix\": \"eslint . --fix && prettier --write --list-different .\"\n    // ...\n  }\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// package.json\n\n{\n  \"scripts\": {\n    // ...\n    \"lint\": \"yarn lint:eslint && yarn lint:prettier\",\n    \"lint:eslint\": \"eslint .\",\n    \"lint:prettier\": \"prettier . --check\",\n    \"lintfix\": \"eslint . --fix && prettier --write --list-different .\"\n    // ...\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"text","value":"Usage"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To check for errors, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lint"}]},{"type":"text","value":". This won't effect any changes, and may be useful in a code review or CI pipeline."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> [warn] app.vue\n>>> [warn] Code style issues found in the above file. Run Prettier to fix.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> [warn] app.vue\n>>> [warn] Code style issues found in the above file. Run Prettier to fix.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n>>> error Command failed with exit code 1.\n>>> info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To fix errors, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lintfix"}]},{"type":"text","value":". This will save any formatting changes."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lintfix\n\n>>> yarn run v1.22.5\n>>> $ prettier --write --list-different . && eslint . --fix\n>>> app.vue\n>>> Done in 2.59s.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lintfix\n\n>>> yarn run v1.22.5\n>>> $ prettier --write --list-different . && eslint . --fix\n>>> app.vue\n>>> Done in 2.59s.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lintfix"}]},{"type":"text","value":", invoking "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn lint"}]},{"type":"text","value":" should be successful."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> All matched files use Prettier code style!\n>>> Done in 3.07s.\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn lint\n\n>>> yarn run v1.22.5\n>>> $ yarn lint:eslint && yarn lint:prettier\n>>> $ eslint .\n>>> $ prettier . --check\n>>> Checking formatting...\n>>> All matched files use Prettier code style!\n>>> Done in 3.07s.\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All done!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can hopefully now avoid the nitpicking arguments üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"packages","depth":3,"text":"Packages"},{"id":"configuration","depth":3,"text":"Configuration"},{"id":"scripts","depth":3,"text":"Scripts"}]},{"id":"usage","depth":2,"text":"Usage"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting.md","_source":"content","_file":"blog/nuxt/adding-eslint-prettier-to-nuxt-3-tutorial-lint-linter-linting.md","_extension":"md"},{"_path":"/blog/nuxt/adding-vitest-to-nuxt-3-tutorial-unit-testing","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Vitest to Nuxt 3 ‚ö° (2023)","description":"Getting started with Vitest for blazing-fast unit tests.","slug":"adding-vitest-to-nuxt-3-tutorial-unit-testing","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-vitest-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlnkh4kjkjq6u0yqz54e.png","publishedAt":"2023-01-05T09:00:00.000Z","tags":"nuxt, nuxt3, vitest, testing","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Vitest for blazing-fast unit tests in your Nuxt 3 project."}]},{"type":"element","tag":"h2","props":{"id":"testing"},"children":[{"type":"text","value":"Testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Unit tests are important for ensuring that your code is working correctly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is especially important when making changes to your code, as you can ensure that you haven't introduced any new bugs or problems to existing features. Or, at least to the extent that these features have been covered by tests."}]},{"type":"element","tag":"h3","props":{"id":"vitest"},"children":[{"type":"text","value":"Vitest"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vitest is a test runner based on Vite, an alternative module bundler to webpack which Nuxt 3 uses by default."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's incredibly similar to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Jest"}]},{"type":"text","value":", and often considered a drop-in replacement for it."}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"h3","props":{"id":"packages"},"children":[{"type":"text","value":"Packages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the following dependencies:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"# Vitest\nyarn add --dev vitest jsdom @vitejs/plugin-vue\n\n# Test utils\nyarn add --dev @vue/test-utils @nuxt/test-utils\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# Vitest\nyarn add --dev vitest jsdom @vitejs/plugin-vue\n\n# Test utils\nyarn add --dev @vue/test-utils @nuxt/test-utils\n"}]}]},{"type":"element","tag":"h3","props":{"id":"configuration"},"children":[{"type":"text","value":"Configuration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Create your Vitest configuration file ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"vitest.config.js"}]},{"type":"text","value":"):"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// vitest.config.js\n\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\n\nexport default defineConfig({\n  plugins: [vue()],\n  test: {\n    globals: true,\n    environment: \"jsdom\",\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// vitest.config.js\n\nimport { defineConfig } from \"vite\";\nimport vue from \"@vitejs/plugin-vue\";\n\nexport default defineConfig({\n  plugins: [vue()],\n  test: {\n    globals: true,\n    environment: \"jsdom\",\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"eslint-integration"},"children":[{"type":"text","value":"ESLint integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you're using ESLint from earlier in the series, you should also add its Vitest plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add --dev eslint-plugin-vitest\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add --dev eslint-plugin-vitest\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Then, modify your "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":".eslintrc.cjs"}]},{"type":"text","value":" file to add the plugin:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// .eslintrc.cjs\n\nmodule.exports = {\n  // ...\n  plugins: [\"vitest\"],\n  // ...\n};\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// .eslintrc.cjs\n\nmodule.exports = {\n  // ...\n  plugins: [\"vitest\"],\n  // ...\n};\n"}]}]},{"type":"element","tag":"h3","props":{"id":"scripts"},"children":[{"type":"text","value":"Scripts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the following script to your project:"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// package.json\n\n{\n  // ...\n  \"scripts\": {\n    // ...\n    \"test\": \"vitest\"\n    // ...\n  }\n  // ...\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// package.json\n\n{\n  // ...\n  \"scripts\": {\n    // ...\n    \"test\": \"vitest\"\n    // ...\n  }\n  // ...\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"usage"},"children":[{"type":"text","value":"Usage"}]},{"type":"element","tag":"h3","props":{"id":"creating-tests"},"children":[{"type":"text","value":"Creating tests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At this point, you should use a learning resource such as "},{"type":"element","tag":"a","props":{"href":"https://www.youtube.com/watch?v=cM_AeQHzlGg","rel":["nofollow"]},"children":[{"type":"text","value":"Testing with Vitest"}]},{"type":"text","value":" to get started."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A test may look something like this:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// tests/HelloWorld.spec.ts\nimport { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\n\nimport HelloWorld from \"../components/HelloWorld.vue\";\n\ndescribe(\"HelloWorld\", () => {\n  it(\"is a Vue instance\", () => {\n    const wrapper = mount(HelloWorld);\n    expect(wrapper.vm).toBeTruthy();\n  });\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// tests/HelloWorld.spec.ts\nimport { describe, it, expect } from \"vitest\";\nimport { mount } from \"@vue/test-utils\";\n\nimport HelloWorld from \"../components/HelloWorld.vue\";\n\ndescribe(\"HelloWorld\", () => {\n  it(\"is a Vue instance\", () => {\n    const wrapper = mount(HelloWorld);\n    expect(wrapper.vm).toBeTruthy();\n  });\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"running-tests"},"children":[{"type":"text","value":"Running tests"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To run your unit tests, use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn test"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"$ yarn test\n\n>>> yarn run v1.22.5\n>>> $ vitest\n>>>\n>>>  DEV  v0.26.3 ~/Documents/GitHub/nuxt-app\n>>>\n>>>  ‚úì tests/HelloWorld.spec.ts (1)\n>>>\n>>>  Test Files  1 passed (1)\n>>>       Tests  1 passed (1)\n>>>    Start at  23:19:54\n>>>    Duration  1.78s (transform 538ms, setup 1ms, collect 154ms, tests 20ms)\n>>>\n>>>\n>>>  PASS  Waiting for file changes...\n>>>        press h to show help, press q to quit\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"$ yarn test\n\n>>> yarn run v1.22.5\n>>> $ vitest\n>>>\n>>>  DEV  v0.26.3 ~/Documents/GitHub/nuxt-app\n>>>\n>>>  ‚úì tests/HelloWorld.spec.ts (1)\n>>>\n>>>  Test Files  1 passed (1)\n>>>       Tests  1 passed (1)\n>>>    Start at  23:19:54\n>>>    Duration  1.78s (transform 538ms, setup 1ms, collect 154ms, tests 20ms)\n>>>\n>>>\n>>>  PASS  Waiting for file changes...\n>>>        press h to show help, press q to quit\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All done!"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Now you can start shipping new features in peace üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"testing","depth":2,"text":"Testing","children":[{"id":"vitest","depth":3,"text":"Vitest"}]},{"id":"installation","depth":2,"text":"Installation","children":[{"id":"packages","depth":3,"text":"Packages"},{"id":"configuration","depth":3,"text":"Configuration"},{"id":"eslint-integration","depth":3,"text":"ESLint integration"},{"id":"scripts","depth":3,"text":"Scripts"}]},{"id":"usage","depth":2,"text":"Usage","children":[{"id":"creating-tests","depth":3,"text":"Creating tests"},{"id":"running-tests","depth":3,"text":"Running tests"}]}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-vitest-to-nuxt-3-tutorial-unit-testing.md","_source":"content","_file":"blog/nuxt/adding-vitest-to-nuxt-3-tutorial-unit-testing.md","_extension":"md"},{"_path":"/blog/nuxt/adding-pinia-to-nuxt-3-tutorial-global-state-management","_dir":"nuxt","_draft":false,"_partial":false,"_locale":"","title":"Adding Pinia to Nuxt 3 üçç (2023)","description":"Getting started with Pinia for global state management.","slug":"adding-pinia-to-nuxt-3-tutorial-global-state-management","subtitle":"","series":"Nuxt 3","localimage":"/images/nuxt-cover-16-9.png","cover_image":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eozu62uqnpka4l58nhah.png","publishedAt":"2023-01-04T09:00:00.000Z","tags":"nuxt, nuxt3, pinia","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this post, we'll introduce Pinia, a powerful package for managing your Nuxt app's state in a single place."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Whether you're new to state management solutions or experienced with libraries such as Vuex and Redux, Pinia is definitely worth checking out."}]},{"type":"element","tag":"h2","props":{"id":"state-management"},"children":[{"type":"text","value":"State management"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you've ever found yourself aimlessly trying to manage state through props and events, then the idea of a store may sound appealing:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Manage an app's state from a single, centralised store"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Update and retrieve data through simple actions and getters"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Subscribe to changes to achieve deep reactivity without much work"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This helps to make changes to the app's state predictable and more consistent."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, we can store a counter, and then increment it from anywhere by using its store:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Demo of counter component","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cf2kfethplnmjmvv3oj.gif"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"pinia"},"children":[{"type":"text","value":"Pinia"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia is a state management library for Vue, with an officially-supported module for Nuxt 3 ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"@pinia/nuxt"}]},{"type":"text","value":"). It's also the recommended solution for Vue and Nuxt projects."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Don't just take it from me:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"\"Pinia is de facto Vuex 5!\""}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"‚Äî "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Evan You, creator of Vue"}]},{"type":"text","value":" ("},{"type":"element","tag":"a","props":{"href":"https://twitter.com/youyuxi/status/1463429442076745730","rel":["nofollow"]},"children":[{"type":"text","value":"source"}]},{"type":"text","value":")"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"What makes it useful for Vue and Nuxt applications?"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Deep reactivity by default"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"No explicit mutations (all changes are implicit mutations)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Analogous with Options API:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Actions (equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods"}]},{"type":"text","value":")"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Getters (equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"computed"}]},{"type":"text","value":")"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"installation"},"children":[{"type":"text","value":"Installation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Official documentation for using Pinia with Nuxt can be found "},{"type":"element","tag":"a","props":{"href":"https://nuxt.com/modules/pinia","rel":["nofollow"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Install the package:"}]},{"type":"element","tag":"pre","props":{"className":["language-sh"],"code":"yarn add @pinia/nuxt\n","language":"sh","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"yarn add @pinia/nuxt\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add the module to your Nuxt configuration:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  // ...\n  modules: [\n    // ...\n    \"@pinia/nuxt\",\n  ],\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// nuxt.config.ts\n\nexport default defineNuxtConfig({\n  // ...\n  modules: [\n    // ...\n    \"@pinia/nuxt\",\n  ],\n});\n"}]}]},{"type":"element","tag":"h2","props":{"id":"creating-a-store"},"children":[{"type":"text","value":"Creating a store"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Stores are created in a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"stores/"}]},{"type":"text","value":" directory, and defined by using Pinia's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"defineStore"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this example, we have created a store ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useCounterStore"}]},{"type":"text","value":") and given the store a name ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"counter"}]},{"type":"text","value":"). We have then defined our "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"state"}]},{"type":"text","value":" property ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"count"}]},{"type":"text","value":") with an initial value."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nimport { defineStore } from \"pinia\";\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nimport { defineStore } from \"pinia\";\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It's as simple as that!"}]},{"type":"element","tag":"h2","props":{"id":"using-the-store"},"children":[{"type":"text","value":"Using the store"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia offers a few ways to access the store and maintain reactivity."}]},{"type":"element","tag":"h3","props":{"id":"_1-store-instance"},"children":[{"type":"text","value":"1. Store instance"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In your component's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"setup()"}]},{"type":"text","value":", import the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"useStore()"}]},{"type":"text","value":" method."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      store: useCounterStore(),\n    };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    return {\n      store: useCounterStore(),\n    };\n  },\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can now access state through the store instance:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_2-computed-properties"},"children":[{"type":"text","value":"2. Computed properties"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To write cleaner code, you may wish to grab specific properties. However, destructuring the store will break reactivity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead, we can use a computed property to achieve reactivity:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const count = computed(() => store.count);\n\n    return { count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const count = computed(() => store.count);\n\n    return { count };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h3","props":{"id":"_3-extract-via-storetorefs"},"children":[{"type":"text","value":"3. Extract via storeToRefs()"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can destructure properties from the store while keeping reactivity through the use of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"storeToRefs()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This will create a ref for each reactive property."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const { count } = storeToRefs(store);\n\n    return { count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { count } = store;\n\n    // ‚úîÔ∏è Good:\n    const { count } = storeToRefs(store);\n\n    return { count };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.count }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"actions"},"children":[{"type":"text","value":"Actions"}]},{"type":"element","tag":"h3","props":{"id":"adding-an-action"},"children":[{"type":"text","value":"Adding an action"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Actions are the equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"methods"}]},{"type":"text","value":" in components, defined in the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"actions"}]},{"type":"text","value":" property."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"using-an-action"},"children":[{"type":"text","value":"Using an action"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In your component, extract the action from the store."}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const { increment } = store;\n    const count = computed(() => store.count);\n    return { increment, count };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const { increment } = store;\n    const count = computed(() => store.count);\n    return { increment, count };\n  },\n});\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The action can easily be invoked, such as upon a button being clicked:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <button type=\"button\" @click=\"increment\"></button>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <button type=\"button\" @click=\"increment\"></button>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"getters"},"children":[{"type":"text","value":"Getters"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Getters are the equivalent of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"computed"}]},{"type":"text","value":" in components, defined in the store's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"getters"}]},{"type":"text","value":" property."}]},{"type":"element","tag":"h3","props":{"id":"adding-a-getter"},"children":[{"type":"text","value":"Adding a getter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Pinia encourages the usage of the arrow function, using the state as the first parameter:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  getters: {\n    getCount: (state) => state.count,\n  },\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// stores/counter.ts\n\nexport const useCounterStore = defineStore(\"counter\", {\n  state: () => ({\n    count: 0,\n  }),\n  getters: {\n    getCount: (state) => state.count,\n  },\n  actions: {\n    increment() {\n      this.count++;\n    },\n  },\n});\n"}]}]},{"type":"element","tag":"h3","props":{"id":"using-a-getter"},"children":[{"type":"text","value":"Using a getter"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Similarly to state properties, getters need to be accessed in a way that maintains reactivity."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For instance, you could access it through the store instance:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    return { store };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    return { store };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ store.getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or, by using a computed property:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const getCount = computed(() => store.getCount);\n\n    return { getCount };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const getCount = computed(() => store.getCount);\n\n    return { getCount };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Or, by using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"storeToRefs()"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const { getCount } = storeToRefs(store);\n\n    return { getCount };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\nimport { storeToRefs } from \"pinia\";\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n\n    // ‚ùå Bad (unreactive):\n    const { getCount } = store;\n\n    // ‚úîÔ∏è Good:\n    const { getCount } = storeToRefs(store);\n\n    return { getCount };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n</template>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"a-complete-component"},"children":[{"type":"text","value":"A complete component"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since we've discussed actions and getters separately, here is a code snippet that combines both in the style that I recommend:"}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const getCount = computed(() => store.getCount);\n    const { increment } = store;\n    return { getCount, increment };\n  },\n});\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\nimport { useCounterStore } from \"@/stores/counter\";\n\nexport default defineComponent({\n  setup() {\n    const store = useCounterStore();\n    const getCount = computed(() => store.getCount);\n    const { increment } = store;\n    return { getCount, increment };\n  },\n});\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-ts"],"code":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n  <button type=\"button\" @click=\"increment\">Increment</button>\n</template>\n","language":"ts","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// components/MyCounter.vue\n\n<template>\n  <p>Counter: {{ getCount }}</p>\n  <button type=\"button\" @click=\"increment\">Increment</button>\n</template>\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This code has been implemented at "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/nuxt-3-starter/","rel":["nofollow"]},"children":[{"type":"text","value":"lloydtao/nuxt-3-starter/"}]},{"type":"text","value":":"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Demo of counter component","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cf2kfethplnmjmvv3oj.gif"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How do you think your developer experience will be improved? üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"state-management","depth":2,"text":"State management","children":[{"id":"pinia","depth":3,"text":"Pinia"}]},{"id":"installation","depth":2,"text":"Installation"},{"id":"creating-a-store","depth":2,"text":"Creating a store"},{"id":"using-the-store","depth":2,"text":"Using the store","children":[{"id":"_1-store-instance","depth":3,"text":"1. Store instance"},{"id":"_2-computed-properties","depth":3,"text":"2. Computed properties"},{"id":"_3-extract-via-storetorefs","depth":3,"text":"3. Extract via storeToRefs()"}]},{"id":"actions","depth":2,"text":"Actions","children":[{"id":"adding-an-action","depth":3,"text":"Adding an action"},{"id":"using-an-action","depth":3,"text":"Using an action"}]},{"id":"getters","depth":2,"text":"Getters","children":[{"id":"adding-a-getter","depth":3,"text":"Adding a getter"},{"id":"using-a-getter","depth":3,"text":"Using a getter"}]},{"id":"a-complete-component","depth":2,"text":"A complete component"}]}},"_type":"markdown","_id":"content:blog:nuxt:adding-pinia-to-nuxt-3-tutorial-global-state-management.md","_source":"content","_file":"blog/nuxt/adding-pinia-to-nuxt-3-tutorial-global-state-management.md","_extension":"md"},{"_path":"/blog/general/why-do-we-love-server-side-rendering-again","_dir":"general","_draft":false,"_partial":false,"_locale":"","title":"Why do we love server-side rendering again? ü§Ø","description":"In order to understand the current trends, let‚Äôs have a look at the history of rendering on the web.","slug":"why-do-we-love-server-side-rendering-again","subtitle":"","series":"Blog","localimage":"/images/server-side-rendering.png","publishedAt":"2022-12-28T14:00:00.000Z","tags":"vue, react, nextjs, nuxt","published":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Why is everybody talking about server-side rendering again?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to understand the current trends, let‚Äôs have a look at the history of rendering on the web."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Image description","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/05gnnv287aesdv1m6klb.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"history-of-web-rendering"},"children":[{"type":"text","value":"History of web rendering"}]},{"type":"element","tag":"h3","props":{"id":"_2000-2012"},"children":[{"type":"text","value":"2000 - 2012"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"From 2000 to 2012, if you were interacting with a feature-rich web page, it was almost certainly dynamically rendered by a backend web server. The page would then be served to the client as a static HTML file."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Backend market share was dominated by PHP (1995) and Ruby (1996), with other contenders such as "},{"type":"element","tag":"a","props":{"href":"http://asp.net/","rel":["nofollow"]},"children":[{"type":"text","value":"ASP.NET"}]},{"type":"text","value":" (2002) and Spring (2003) joining the scene over the years."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Image description","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4xaoin5putmp1mzr3t2k.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"_2012-2020"},"children":[{"type":"text","value":"2012 - 2020"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The following decade saw the prominent rise of the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"single-page application"}]},{"type":"text","value":" (SPA)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This method involves rendering HTML in the user's browser, aiming to provide a desktop-like experience. Popular SPA frameworks include AngularJS (2010), React (2013), Vue.js (2014) and Angular 2+ (2016)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Image description","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jtn9p9z5ntrd3bciy9e3.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Features such as JavaScript-based routing could control and maintain state across pages, though it had the downside of long initial load times and poor SEO. Performance issues were also prevalent due to the heavy nature of SPAs, especially on lighter clients such as mobile phones."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Even with the trade-offs, the SPA was beloved and adopted by stakeholders and developers alike, and marked a historic switch to "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"client-side rendering"}]},{"type":"text","value":" (CSR)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This effectively popularised the term ‚Äúserver-side rendering‚Äù, which had never seen mainstream usage as there was no need to differentiate it from CSR."}]},{"type":"element","tag":"h2","props":{"id":"the-return-of-ssr"},"children":[{"type":"text","value":"The return of SSR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These developments in web rendering posed a key question:"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Can we utilise the fast initial load times of SSR while keeping the interactivity and dynamicity of SPAs, all while keeping the application lightweight?"}]}]},{"type":"element","tag":"h3","props":{"id":"client-side-hydration"},"children":[{"type":"text","value":"Client-side hydration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The current best practise is to serve a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"pre-rendered"}]},{"type":"text","value":" page to the client, and then add application state and interactivity through a process called "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"hydration"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since the page is initially rendered by the server, it benefits from a quick load time, and takes rendering load off of the client. In the hydration process, a JavaScript bundle will attach event listeners to the DOM and make it fully interactive. This bundle is comparatively small compared to an SPA, which further keeps the app light and performant."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"React and Vue each have an SSR counterpart, known as "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Next.js"}]},{"type":"text","value":" (2016) and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Nuxt.js"}]},{"type":"text","value":" (2016) respectively. The popularity of these tools began to rise in 2020."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Image description","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2tsq3w33jiep22mnhxzv.png"},"children":[]}]},{"type":"element","tag":"h3","props":{"id":"static-site-generation"},"children":[{"type":"text","value":"Static site generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If we restrict all dynamicity to hydrated components, we can take SSR a step further and pre-render the entire application. This is known as static site generation (SSG), and often used in "},{"type":"element","tag":"a","props":{"href":"https://jamstack.org/","rel":["nofollow"]},"children":[{"type":"text","value":"JAMStack"}]},{"type":"text","value":" applications."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Advanced SSG tools may even collect and transform data as they build the application (e.g. Markdown, CSV, JSON). This makes it useful for content that changes infrequently, such as blogs and documentation, as further API calls do not need to be made by the client."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All-in-all, this removes the need for a web server. The files can be shipped to any static hosting provider (e.g. Amazon S3, GitHub Pages) and served through a CDN to benefit from even lower latency and load times."}]},{"type":"element","tag":"h2","props":{"id":"the-horseshoe"},"children":[{"type":"text","value":"The horseshoe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In summary, web rendering has jumped from fully server-side (~1995 to 2010) to fully client-side rendered (~2010 to 2016), and then settled somewhere around mainly server-side rendered with client-side rendering for interactivity (~2016 onwards)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"So, while it has not necessarily "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"fully"}]},{"type":"text","value":" horseshoed back to server-side rendering, we‚Äôve definitely taken a tremendous leap in each direction."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Image description","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfnj873gaed3repe7bz5.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Which other technologies do you think could make a comeback? üòâ"}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hey, guys! Thank you for reading. I hope that you enjoyed this."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Keep up to date with me:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Website: "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx/","rel":["nofollow"]},"children":[{"type":"text","value":"https://lloyd.cx/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Twitter: "},{"type":"element","tag":"a","props":{"href":"https://twitter.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://twitter.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitHub: "},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"LinkedIn: "},{"type":"element","tag":"a","props":{"href":"https://www.linkedin.com/in/lloydtao/","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.linkedin.com/in/lloydtao/"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"history-of-web-rendering","depth":2,"text":"History of web rendering","children":[{"id":"_2000-2012","depth":3,"text":"2000 - 2012"},{"id":"_2012-2020","depth":3,"text":"2012 - 2020"}]},{"id":"the-return-of-ssr","depth":2,"text":"The return of SSR","children":[{"id":"client-side-hydration","depth":3,"text":"Client-side hydration"},{"id":"static-site-generation","depth":3,"text":"Static site generation"}]},{"id":"the-horseshoe","depth":2,"text":"The horseshoe"}]}},"_type":"markdown","_id":"content:blog:general:why-do-we-love-server-side-rendering-again.md","_source":"content","_file":"blog/general/why-do-we-love-server-side-rendering-again.md","_extension":"md"},{"_path":"/projects/gridlink-automating-a-continuous-integration-continuous-deployment-pipeline","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Automating a CI/CD pipeline","description":"Automating test, build and deployment using GitHub Actions","slug":"gridlink-automating-a-continuous-integration-continuous-deployment-pipeline","subtitle":"","series":"Gridlink","localimage":"/images/github-actions.png","publishedAt":"2022-12-15T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CI/CD stands for continuous integration/continuous deployment."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It refers to the practice of automatically building, testing, and deploying software applications at regular intervals."}]},{"type":"element","tag":"h2","props":{"id":"continuous-integration"},"children":[{"type":"text","value":"Continuous integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"CI, or continuous integration, is the practice of automatically integrating code changes into a shared codebase."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This typically involves running automated tests to ensure that the integrated code is functional and does not introduce any regressions."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To run these tests predictably and repeatably, Gridlink uses GitHub Actions. This is an infrastructure-as-code tool for automating software development workflows."}]},{"type":"element","tag":"h3","props":{"id":"frontend"},"children":[{"type":"text","value":"Frontend"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Our frontend CI is a simple workflow configured to run on pull request events."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The projected is linted and then tested. These tasks must complete successfully in order for the pull request to have permission to merge."}]},{"type":"element","tag":"pre","props":{"className":["language-yaml"],"code":"name: gridlink-frontend-ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: frontend/\n\njobs:\n  ci:\n    name: Build and test frontend\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - frontend/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.2.0\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.5.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n","language":"yaml","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: gridlink-frontend-ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: frontend/\n\njobs:\n  ci:\n    name: Build and test frontend\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - frontend/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.2.0\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.5.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n"}]}]},{"type":"element","tag":"h3","props":{"id":"backend"},"children":[{"type":"text","value":"Backend"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Backend deployment"}]}]},{"type":"element","tag":"h2","props":{"id":"continuous-deployment"},"children":[{"type":"text","value":"Continuous deployment"}]},{"type":"element","tag":"h3","props":{"id":"frontend-1"},"children":[{"type":"text","value":"Frontend"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Frontend deployment"}]}]},{"type":"element","tag":"h3","props":{"id":"backend-1"},"children":[{"type":"text","value":"Backend"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Backend deployment"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"continuous-integration","depth":2,"text":"Continuous integration","children":[{"id":"frontend","depth":3,"text":"Frontend"},{"id":"backend","depth":3,"text":"Backend"}]},{"id":"continuous-deployment","depth":2,"text":"Continuous deployment","children":[{"id":"frontend-1","depth":3,"text":"Frontend"},{"id":"backend-1","depth":3,"text":"Backend"}]}]}},"_type":"markdown","_id":"content:projects:gridlink-automating-a-continuous-integration-continuous-deployment-pipeline.md","_source":"content","_file":"projects/gridlink-automating-a-continuous-integration-continuous-deployment-pipeline.md","_extension":"md"},{"_path":"/projects/gridlink-writing-infrastructure-as-code","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Writing infrastructure as code","description":"Deploying to AWS (Amazon ECS, Amazon RDS) using Docker and Terraform","slug":"gridlink-writing-infrastructure-as-code","subtitle":"","series":"Gridlink","localimage":"/images/aws-terraform-docker.png","publishedAt":"2022-12-12T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"h3","props":{"id":"docker"},"children":[{"type":"text","value":"Docker"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Docker is a popular tool for packaging and deploying applications as portable, self-sufficient containers that can run on any system with a Docker runtime."}]},{"type":"element","tag":"h3","props":{"id":"amazon-ecs"},"children":[{"type":"text","value":"Amazon ECS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Amazon ECS is a cloud-based container orchestration service that makes it easy to deploy, manage, and scale containerized applications on the Amazon Web Services (AWS) platform."}]},{"type":"element","tag":"h3","props":{"id":"terraform"},"children":[{"type":"text","value":"Terraform"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Terraform is a tool for defining and managing infrastructure as code."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It allows users to declaratively specify the desired state of their infrastructure and automates the process of provisioning and maintaining that infrastructure."}]},{"type":"element","tag":"h2","props":{"id":"containerisation"},"children":[{"type":"text","value":"Containerisation"}]},{"type":"element","tag":"h3","props":{"id":"dockerfile"},"children":[{"type":"text","value":"Dockerfile"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Creating a Dockerfile and building a container image"}]}]},{"type":"element","tag":"h3","props":{"id":"amazon-ecr"},"children":[{"type":"text","value":"Amazon ECR"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Pushing a container image to Amazon ECR"}]}]},{"type":"element","tag":"h2","props":{"id":"infrastructure"},"children":[{"type":"text","value":"Infrastructure"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Outline of infrastructure configured with Terraform"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction","children":[{"id":"docker","depth":3,"text":"Docker"},{"id":"amazon-ecs","depth":3,"text":"Amazon ECS"},{"id":"terraform","depth":3,"text":"Terraform"}]},{"id":"containerisation","depth":2,"text":"Containerisation","children":[{"id":"dockerfile","depth":3,"text":"Dockerfile"},{"id":"amazon-ecr","depth":3,"text":"Amazon ECR"}]},{"id":"infrastructure","depth":2,"text":"Infrastructure"}]}},"_type":"markdown","_id":"content:projects:gridlink-writing-infrastructure-as-code.md","_source":"content","_file":"projects/gridlink-writing-infrastructure-as-code.md","_extension":"md"},{"_path":"/projects/gridlink-creating-a-performant-frontend","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Creating a performant frontend","description":"Creating an SSR/SSG application with client-side hydration using Nuxt","slug":"gridlink-creating-a-performant-frontend","subtitle":"","series":"Gridlink","localimage":"/images/nuxt-tailwind.png","publishedAt":"2022-12-05T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gridlink leverages a combination of three techniques:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Server-side rendering (SSR)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Static site generation (SSG)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Client-side hydration"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Using these techniques provides several benefits, including improved performance and search engine optimization."}]},{"type":"element","tag":"h3","props":{"id":"server-side-rendering"},"children":[{"type":"text","value":"Server-side rendering"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"With server-side rendering, the server generates the fully-rendered HTML for a page and sends it to the client. This removes the need for the client to render the page on the fly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This improves the initial load time of the page, as well as making it more accessible to search engines."}]},{"type":"element","tag":"h3","props":{"id":"static-site-generation"},"children":[{"type":"text","value":"Static site generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Combining server-side rendering with static site generation allows Gridlink to pre-build the HTML for the entire application and serve it from a content delivery network (CDN)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A CDN is a distributed network of servers that can deliver content more efficiently to users, and can help with:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Serving content from a location that is closer to the user's geographical location"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Offloading some of the workload from an application's origin server"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mitigating the effects of overloading (traffic spikes, DDoS)"}]}]},{"type":"element","tag":"h3","props":{"id":"client-side-hydration"},"children":[{"type":"text","value":"Client-side hydration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gridlink leverages client-side hydration to handle dynamic, interactive features on server-rendered pages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After being served a rendered page, the client's JavaScript bundle takes over and turns the static HTML into dynamic DOM that reacts to client-side data changes. We can then perform asynchronous actions such as fetching from an external API."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In summary, this provides an interactive user experience, without sacrificing the initial load benefits of server-side rendering, with the ability to distribute the application as static files from a CDN."}]},{"type":"element","tag":"h2","props":{"id":"nuxt"},"children":[{"type":"text","value":"Nuxt"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Using Nuxt to create an SSR/SSG application"}]}]},{"type":"element","tag":"h2","props":{"id":"tailwind"},"children":[{"type":"text","value":"Tailwind"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Using Tailwind for rapid mark-up development"}]}]},{"type":"element","tag":"h2","props":{"id":"application"},"children":[{"type":"text","value":"Application"}]},{"type":"element","tag":"h3","props":{"id":"layouts"},"children":[{"type":"text","value":"Layouts"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Layouts"}]}]},{"type":"element","tag":"h3","props":{"id":"pages"},"children":[{"type":"text","value":"Pages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Pages"}]}]},{"type":"element","tag":"h3","props":{"id":"components"},"children":[{"type":"text","value":"Components"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Components"}]}]},{"type":"element","tag":"h2","props":{"id":"generation"},"children":[{"type":"text","value":"Generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":" Using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":" to build application as static files"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction","children":[{"id":"server-side-rendering","depth":3,"text":"Server-side rendering"},{"id":"static-site-generation","depth":3,"text":"Static site generation"},{"id":"client-side-hydration","depth":3,"text":"Client-side hydration"}]},{"id":"nuxt","depth":2,"text":"Nuxt"},{"id":"tailwind","depth":2,"text":"Tailwind"},{"id":"application","depth":2,"text":"Application","children":[{"id":"layouts","depth":3,"text":"Layouts"},{"id":"pages","depth":3,"text":"Pages"},{"id":"components","depth":3,"text":"Components"}]},{"id":"generation","depth":2,"text":"Generation"}]}},"_type":"markdown","_id":"content:projects:gridlink-creating-a-performant-frontend.md","_source":"content","_file":"projects/gridlink-creating-a-performant-frontend.md","_extension":"md"},{"_path":"/projects/gridlink-building-a-scalable-backend","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Building a scalable backend","description":"Building a database and REST API using Django and PostgreSQL","slug":"gridlink-building-a-scalable-backend","subtitle":"","series":"Gridlink","localimage":"/images/django-postgres.png","publishedAt":"2022-12-03T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django is a framework for building monolithic web applications."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Although not typically associated with performance at scale, a monolith can be feasible if it is kept "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"stateless"}]},{"type":"text","value":" and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"modular"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Statelessness, where an application server is dependent only on third-party storage, allows us to leverage horizontal scaling. This is the usage of parallel servers to distribute load across multiple nodes."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Modularity will allow us to easily migrate to a microservices architecture in the future."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django already encourages breaking a project into apps, where each app has its own data models, data views, routes and tests. It also comes with an object-relational mapper (ORM) for interfacing with an SQL database. These characteristics lead to a well-structured Django project being logically similar to microservices."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"How about the database? Postgres already does a good job of handling tens of thousands of concurrent requests per second, which means that we won't have to worry about scaling for a while. If needed, we can explore single-master replication, where data is modified on a single write node and replicated to many read nodes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All in all, the only major drawback is that the entire monolith is replicated when horizontally scaling. This results in a suboptimal usage of server resources, as well as increased scale-out times. For the time being, this is a sound compromise."}]},{"type":"element","tag":"h2","props":{"id":"models"},"children":[{"type":"text","value":"Models"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Database models are defined using Python classes that inherit from Django's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"models.Model"}]},{"type":"text","value":" class."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Models are a collection of fields, where each has a field type and various parameters such as constraints, default values and indexes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gridlink allows a user to create many grids, where each grid has many links. Here, we define the grid model with Django:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"class Grid(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"grids\")\n    slug = models.SlugField(unique=True, db_index=True, default=generate_slug)\n    title = models.CharField(max_length=128, default=\"\", blank=True)\n    created_on = models.DateTimeField(auto_now_add=True)\n    modified_on = models.DateTimeField(blank=True, null=True)\n    deleted_on = models.DateTimeField(blank=True, null=True)\n    is_deleted = models.BooleanField(default=False)\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Grid(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"grids\")\n    slug = models.SlugField(unique=True, db_index=True, default=generate_slug)\n    title = models.CharField(max_length=128, default=\"\", blank=True)\n    created_on = models.DateTimeField(auto_now_add=True)\n    modified_on = models.DateTimeField(blank=True, null=True)\n    deleted_on = models.DateTimeField(blank=True, null=True)\n    is_deleted = models.BooleanField(default=False)\n"}]}]},{"type":"element","tag":"h2","props":{"id":"database"},"children":[{"type":"text","value":"Database"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"After defining the data models, Django provides two commands to create the necessary database tables and columns."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"makemigrations"}]},{"type":"text","value":" command will generate the migration files that define changes to a database schema. These files are treated as source code and committed to the repository."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Here is the relevant part of the generated migration for creating the grid model:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"migrations.CreateModel(\n    name=\"Grid\",\n    fields=[\n        (\n            \"id\",\n            models.BigAutoField(\n                auto_created=True,\n                primary_key=True,\n                serialize=False,\n                verbose_name=\"ID\",\n            ),\n        ),\n        (\n            \"slug\",\n            models.SlugField(default=grids.models.generate_slug, unique=True),\n        ),\n        (\"title\", models.CharField(blank=True, default=\"\", max_length=128)),\n        (\"created_on\", models.DateTimeField(auto_now_add=True)),\n        (\"modified_on\", models.DateTimeField(blank=True, null=True)),\n        (\"deleted_on\", models.DateTimeField(blank=True, null=True)),\n        (\"is_deleted\", models.BooleanField(default=False)),\n        (\n            \"user\",\n            models.ForeignKey(\n                on_delete=django.db.models.deletion.CASCADE,\n                to=settings.AUTH_USER_MODEL,\n            ),\n        ),\n    ],\n)\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"migrations.CreateModel(\n    name=\"Grid\",\n    fields=[\n        (\n            \"id\",\n            models.BigAutoField(\n                auto_created=True,\n                primary_key=True,\n                serialize=False,\n                verbose_name=\"ID\",\n            ),\n        ),\n        (\n            \"slug\",\n            models.SlugField(default=grids.models.generate_slug, unique=True),\n        ),\n        (\"title\", models.CharField(blank=True, default=\"\", max_length=128)),\n        (\"created_on\", models.DateTimeField(auto_now_add=True)),\n        (\"modified_on\", models.DateTimeField(blank=True, null=True)),\n        (\"deleted_on\", models.DateTimeField(blank=True, null=True)),\n        (\"is_deleted\", models.BooleanField(default=False)),\n        (\n            \"user\",\n            models.ForeignKey(\n                on_delete=django.db.models.deletion.CASCADE,\n                to=settings.AUTH_USER_MODEL,\n            ),\n        ),\n    ],\n)\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"migrate"}]},{"type":"text","value":" command will search for unapplied migrations in the project, and then apply these changes to a database. By running this command before spinning up the application, the database will always be in-sync with the defined data models."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django's object-relational mapper (ORM) can be used to perform CRUD (create, read, update, delete) operations on the database. This allows for interaction with the database using Python code, while still maintaining the performance of raw SQL queries."}]},{"type":"element","tag":"h2","props":{"id":"api"},"children":[{"type":"text","value":"API"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django REST framework ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"django-rest-framework"}]},{"type":"text","value":") provides a platter of tools and utilities that make it easy to create API endpoints, including serialisers, viewsets and routers. These allow you to create API endpoints by defining the serialisation, queryset and other behaviors in a declarative manner."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First, we create a serialiser class that defines how a data model should be serialised and deserialised. For example, this is a general serialiser for the link model. By default, the grid's primary key will be serialised, but we can switch this out for its slug instead."}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"class LinkDetailSerialiser(serializers.ModelSerializer):\n    grid = serializers.SlugRelatedField(slug_field=\"slug\", read_only=True)\n\n    class Meta:\n        model = Link\n        fields = \"__all__\"\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class LinkDetailSerialiser(serializers.ModelSerializer):\n    grid = serializers.SlugRelatedField(slug_field=\"slug\", read_only=True)\n\n    class Meta:\n        model = Link\n        fields = \"__all__\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once our serialiser is defined, we can use it within a viewset. This is where we write the logic for each HTTP method."}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"class LinkViewSet(viewsets.ViewSet):\n    def create(self, request):\n        ...\n\n    def retrieve(self, request, pk=None):\n        qs = Link.objects.select_related(\"grid\").all()\n        link = get_object_or_404(qs, slug=pk, is_deleted=False)\n        serializer = LinkDetailSerialiser(link)\n        return Response(serializer.data)\n\n    def list(self, request):\n        ...\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class LinkViewSet(viewsets.ViewSet):\n    def create(self, request):\n        ...\n\n    def retrieve(self, request, pk=None):\n        qs = Link.objects.select_related(\"grid\").all()\n        link = get_object_or_404(qs, slug=pk, is_deleted=False)\n        serializer = LinkDetailSerialiser(link)\n        return Response(serializer.data)\n\n    def list(self, request):\n        ...\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Finally, we can point routes to this viewset."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Since we're using DRF's "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"viewsets.ViewSet"}]},{"type":"text","value":", requests are already handled appropriately based on method ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"GET"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"POST"}]},{"type":"text","value":", etc.) and URL ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/links/"}]},{"type":"text","value":" vs. "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"/links/{id}/"}]},{"type":"text","value":")."}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"links_router = routers.DefaultRouter()\nlinks_router.register(r\"links\", LinkViewSet, basename=\"links\")\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"links_router = routers.DefaultRouter()\nlinks_router.register(r\"links\", LinkViewSet, basename=\"links\")\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Perfect! We can now make calls to our API."}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"// GET /api/links/li_287df45a6c294bb397a5acd29cdbf63f/\n\n// HTTP 200 OK\n// Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\n// Content-Type: application/json\n// Vary: Accept\n\n{\n  \"slug\": \"li_287df45a6c294bb397a5acd29cdbf63f\",\n  \"grid\": \"gr_58b5fc7e8e854f469192a928518aea5b\",\n  \"title\": \"Portfolio\",\n  \"background\": \"/bg/colours.jpg\",\n  \"width\": 2,\n  \"height\": 1\n  // ...\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// GET /api/links/li_287df45a6c294bb397a5acd29cdbf63f/\n\n// HTTP 200 OK\n// Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\n// Content-Type: application/json\n// Vary: Accept\n\n{\n  \"slug\": \"li_287df45a6c294bb397a5acd29cdbf63f\",\n  \"grid\": \"gr_58b5fc7e8e854f469192a928518aea5b\",\n  \"title\": \"Portfolio\",\n  \"background\": \"/bg/colours.jpg\",\n  \"width\": 2,\n  \"height\": 1\n  // ...\n}\n"}]}]},{"type":"element","tag":"h3","props":{"id":"slugs"},"children":[{"type":"text","value":"Slugs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Across the API, Gridlink obfuscates the primary keys of objects with slugs to prevent "},{"type":"element","tag":"a","props":{"href":"https://wiki.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References","rel":["nofollow"]},"children":[{"type":"text","value":"insecure direct object references"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is to avoid sequential, predictable keys, which are a source of information leakage. We would like to avoid the potential business impacts, such as exposing the total number objects and the rate of their creation, and technical impacts, such as inviting bad actors to iterate over and archive the database (and possibly cause a denial of service)."}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{ \"slug\": \"gr_58b5fc7e8e854f469192a928518aea5b\" }\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{ \"slug\": \"gr_58b5fc7e8e854f469192a928518aea5b\" }\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Inspiration for the format was taken from Stripe's "},{"type":"element","tag":"a","props":{"href":"https://dev.to/stripe/designing-apis-for-humans-object-ids-3o5a","rel":["nofollow"]},"children":[{"type":"text","value":"Designing APIs for humans"}]},{"type":"text","value":" series. Stripe prefixes slugs with model identifiers to prevent human error, both for internal developers and for their customers."}]},{"type":"element","tag":"h2","props":{"id":"authentication"},"children":[{"type":"text","value":"Authentication"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Authentication is the process of identifying, and verifying the identity of, a user. This is initially achieved through the use of a username and password."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To avoid having to store the password and re-send it on every request, which poses an inherent security risk, we can use a token-based system. In short, a token represents the user's credentials, and can be stored and utilised as a guarantee of their identity instead."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We have several token-based solutions available, including:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Basic token authentication:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"One token for all sessions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Tracked in the database and can be revoked (forced logout)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Does not implicitly store details/permissions and must be looked up"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"JSON Web Token (JWT):\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"One token per session"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Does not require database storage, and works on an refresh/expire model"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Includes details/permissions signed by the server (can be trusted)"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Several well-maintained packages for dealing with authentication are available. For example, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"dj-rest-auth"}]},{"type":"text","value":" provides methods and respective endpoints for signing up, logging in, resetting and password and social media authentication."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Once installed, the client can fetch and then send their token in their requests:"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"headers = {\n  Vary: Origin,\n  \"Access-Control-Allow-Origin\": \"https://gridl.ink\",\n  Authorization: \"Token \" + authtoken + \"\",\n  \"X-CSRFToken\": csrftoken,\n};\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"headers = {\n  Vary: Origin,\n  \"Access-Control-Allow-Origin\": \"https://gridl.ink\",\n  Authorization: \"Token \" + authtoken + \"\",\n  \"X-CSRFToken\": csrftoken,\n};\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If a valid token is sent, we'll have access to the user's identity in the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"user"}]},{"type":"text","value":" attribute of the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"request"}]},{"type":"text","value":" object. We can thus define the handling of the request accordingly:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"def create(self, request):\n    # Handle user is not authenticated\n    if not request.user.is_authenticated:\n        raise PermissionDenied(\n            {\"message\": \"You must be logged in to access this resource.\"}\n        )\n    # Get grid object from slug\n    grid = get_object_or_404(Grid, slug=request.data[\"grid\"], is_deleted=False)\n    # Handle grid does not belong to user\n    if grid.user != request.user:\n        raise PermissionDenied(\n            {\"message\": \"You don't have permission to add links to this grid.\"}\n        )\n    ...\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def create(self, request):\n    # Handle user is not authenticated\n    if not request.user.is_authenticated:\n        raise PermissionDenied(\n            {\"message\": \"You must be logged in to access this resource.\"}\n        )\n    # Get grid object from slug\n    grid = get_object_or_404(Grid, slug=request.data[\"grid\"], is_deleted=False)\n    # Handle grid does not belong to user\n    if grid.user != request.user:\n        raise PermissionDenied(\n            {\"message\": \"You don't have permission to add links to this grid.\"}\n        )\n    ...\n"}]}]},{"type":"element","tag":"h2","props":{"id":"optimisation"},"children":[{"type":"text","value":"Optimisation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django's ORM is incredibly useful, but is has one rule for oerformance and optimisation: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"work at the appropriate level"}]},{"type":"text","value":". This means performing operations at the database level, instead of through multiple levels of abstraction and layers of machinery."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is because SQL is purpose-built for querying and manipulating structured data. Additionally, SQL has built-in aggregation functions that can optimise and even reduce the complexity of operations."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, how can we efficiently check the total number of links created?"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"links = Link.objects.all()\n\nn = len(links)  # O(n) Python operations\nn = links.count()  # SQL COUNT() -> O(n) SQL operations, O(1) if row count cached\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"links = Link.objects.all()\n\nn = len(links)  # O(n) Python operations\nn = links.count()  # SQL COUNT() -> O(n) SQL operations, O(1) if row count cached\n"}]}]},{"type":"element","tag":"h3","props":{"id":"indexing"},"children":[{"type":"text","value":"Indexing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A database index is used to find out where a data row is located in a table. The benefit is that we don't have to scan the entire table when querying on an index."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default, an auto-incrementing primary key serves as the sole index of a table. An easy way to improve query performance is to index additional columns. For example, in the user table, we can index by username in order to retrieve a user's details by username in O(1) time instead of O(n). Similarly, we can perform a uniqueness check on any indexed field in O(1) time."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A link's slug field is explicitly indexed within its database model:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"class Link(models.Model):\n    grid = models.ForeignKey(Grid, on_delete=models.CASCADE, related_name=\"links\")\n    slug = models.SlugField(\n        unique=True, db_index=True, default=generate_slug, editable=False\n    )\n    ...\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"class Link(models.Model):\n    grid = models.ForeignKey(Grid, on_delete=models.CASCADE, related_name=\"links\")\n    slug = models.SlugField(\n        unique=True, db_index=True, default=generate_slug, editable=False\n    )\n    ...\n"}]}]},{"type":"element","tag":"h3","props":{"id":"select-related"},"children":[{"type":"text","value":"Select related"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"JOIN"}]},{"type":"text","value":" clause is used to efficiently query data from multiple tables based on a shared column."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When fetching a link, the slug of its grid is returned in the response. However, within the database, the grid's primary key is stored in order to represent that relationship natively. Therefore, we need to query the slug from the grid object."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to serialise a list of 27 links "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"without using an inner join"}]},{"type":"text","value":", we'd need 28 queries. This is why it's often referred to as the N+1 Queries problem."}]},{"type":"element","tag":"pre","props":{"className":["language-sql"],"code":"1. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\" FROM \"links_link\"\n\n2. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 1 LIMIT 21\n\n3. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 1 LIMIT 21\n\n...\n\n27. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 9 LIMIT 21\n\n28. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 9 LIMIT 21\n","language":"sql","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"1. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\" FROM \"links_link\"\n\n2. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 1 LIMIT 21\n\n3. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 1 LIMIT 21\n\n...\n\n27. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 9 LIMIT 21\n\n28. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\",  FROM \"grids_grid\" WHERE \"grids_grid\".\"id\" = 9 LIMIT 21\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Django's ORM provides "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"select_related()"}]},{"type":"text","value":", which will follow foreign-key relationships and fetch any additional related-object data by creating an SQL join."}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"def retrieve(self, request, pk=None):\n    qs = Link.objects.select_related(\"grid\").all()\n    link = get_object_or_404(qs, slug=pk, is_deleted=False)\n    ...\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def retrieve(self, request, pk=None):\n    qs = Link.objects.select_related(\"grid\").all()\n    link = get_object_or_404(qs, slug=pk, is_deleted=False)\n    ...\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This turns the 28 queries above into a single, efficient query:"}]},{"type":"element","tag":"pre","props":{"className":["language-sql"],"code":"1. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\", \"grids_grid\".\"id\", \"grids_grid\".\"slug\", FROM \"links_link\" INNER JOIN \"grids_grid\" ON (\"links_link\".\"grid_id\" = \"grids_grid\".\"id\")\n","language":"sql","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"1. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\", \"grids_grid\".\"id\", \"grids_grid\".\"slug\", FROM \"links_link\" INNER JOIN \"grids_grid\" ON (\"links_link\".\"grid_id\" = \"grids_grid\".\"id\")\n"}]}]},{"type":"element","tag":"h3","props":{"id":"prefetch-related"},"children":[{"type":"text","value":"Prefetch related"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The ORM also provides "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prefetch_related()"}]},{"type":"text","value":" in order to avoid iterating over a one-to-many relationship."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For example, when fetching a user's profile, Gridlink will serialise all of their grids, and for each grid links, each of its links. For 1 user with 3 grids, where each grid has and 3 links, we'd have a total of 13 queries."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We can reduce the total number of queries by prefetching the respective grids and links:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"def retrieve(self, request, pk=None):\n    qs = User.objects.prefetch_related(\"grids__links\").all()\n    user = get_object_or_404(qs, username=pk)\n    ...\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def retrieve(self, request, pk=None):\n    qs = User.objects.prefetch_related(\"grids__links\").all()\n    user = get_object_or_404(qs, username=pk)\n    ...\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This results in a single query per model:"}]},{"type":"element","tag":"pre","props":{"className":["language-sql"],"code":"1. SELECT \"accounts_user\".\"id\", \"accounts_user\".\"username\" FROM \"accounts_user\" WHERE \"accounts_user\".\"username\" = 'test_user_0' LIMIT 21\n\n2. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\" FROM \"grids_grid\" WHERE \"grids_grid\".\"user_id\" IN (1)\n\n3. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\" FROM \"links_link\" WHERE \"links_link\".\"grid_id\" IN (1, 2, 3)\n","language":"sql","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"1. SELECT \"accounts_user\".\"id\", \"accounts_user\".\"username\" FROM \"accounts_user\" WHERE \"accounts_user\".\"username\" = 'test_user_0' LIMIT 21\n\n2. SELECT \"grids_grid\".\"id\", \"grids_grid\".\"user_id\", \"grids_grid\".\"slug\" FROM \"grids_grid\" WHERE \"grids_grid\".\"user_id\" IN (1)\n\n3. SELECT \"links_link\".\"id\", \"links_link\".\"grid_id\", \"links_link\".\"slug\" FROM \"links_link\" WHERE \"links_link\".\"grid_id\" IN (1, 2, 3)\n"}]}]},{"type":"element","tag":"h2","props":{"id":"tests"},"children":[{"type":"text","value":"Tests"}]},{"type":"element","tag":"h3","props":{"id":"unit-tests"},"children":[{"type":"text","value":"Unit tests"}]},{"type":"element","tag":"h3","props":{"id":"load-testing"},"children":[{"type":"text","value":"Load testing"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Load testing is typically performed on end-to-end infrastructure in order to test the effects of high demand. Gridlink performs load and query testing at the API level. The aim is to make sure that response times aren't creeping up as hundreds of thousands of objects are created."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In general, the cause of bad performance will be inefficient querying (a misused or forgetten "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"select_related()"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"prefetch_related()"}]},{"type":"text","value":"), and its effect will be slower response times as the number of objects grow."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Therefore, we can check these two core characteristics:"}]},{"type":"element","tag":"pre","props":{"className":["language-python"],"code":"def setUpTestData(self):\n    # Populate test database with 1,000,000 links\n    n_users = 10_000\n    n_grids = 10\n    n_links = 10\n    ...\n    self.test_user = User.objects.get(id=495)\n\ndef test_user_detail_time(self):\n    # Start timer\n    tic = time.perf_counter()\n    # Serialise a user's profile using exactly 3 queries\n    with self.assertNumQueries(3):\n        response = self.client.get(\n            reverse(\"users-detail\", kwargs={\"pk\": self.test_user.username})\n        )\n    # Assert response is < 30ms\n    toc = time.perf_counter()\n    assert toc - tic < 0.03\n","language":"python","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"def setUpTestData(self):\n    # Populate test database with 1,000,000 links\n    n_users = 10_000\n    n_grids = 10\n    n_links = 10\n    ...\n    self.test_user = User.objects.get(id=495)\n\ndef test_user_detail_time(self):\n    # Start timer\n    tic = time.perf_counter()\n    # Serialise a user's profile using exactly 3 queries\n    with self.assertNumQueries(3):\n        response = self.client.get(\n            reverse(\"users-detail\", kwargs={\"pk\": self.test_user.username})\n        )\n    # Assert response is < 30ms\n    toc = time.perf_counter()\n    assert toc - tic < 0.03\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"models","depth":2,"text":"Models"},{"id":"database","depth":2,"text":"Database"},{"id":"api","depth":2,"text":"API","children":[{"id":"slugs","depth":3,"text":"Slugs"}]},{"id":"authentication","depth":2,"text":"Authentication"},{"id":"optimisation","depth":2,"text":"Optimisation","children":[{"id":"indexing","depth":3,"text":"Indexing"},{"id":"select-related","depth":3,"text":"Select related"},{"id":"prefetch-related","depth":3,"text":"Prefetch related"}]},{"id":"tests","depth":2,"text":"Tests","children":[{"id":"unit-tests","depth":3,"text":"Unit tests"},{"id":"load-testing","depth":3,"text":"Load testing"}]}]}},"_type":"markdown","_id":"content:projects:gridlink-building-a-scalable-backend.md","_source":"content","_file":"projects/gridlink-building-a-scalable-backend.md","_extension":"md"},{"_path":"/projects/portfolio","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Portfolio","description":"Personal portfolio built with Nuxt, Tailwind and GitHub Pages","slug":"portfolio","subtitle":"","series":"Personal","localimage":"/images/portfolio.png","publishedAt":"2022-07-30T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"My personal portfolio is a collection of my work, wrapped up in a snappy, responsive Nuxt application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can view the source code here:\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/portfolio","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/portfolio"}]}]},{"type":"element","tag":"h2","props":{"id":"nuxt"},"children":[{"type":"text","value":"Nuxt"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt is a framework for building Vue applications, and includes features such as file-system routing and static site generation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It leverages server-side rendering, where the server generates fully-rendered HTML for a page and sends it to the client. This removes the need for the client to render the page on the fly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Combining server-side rendering with static site generation allows me to pre-build the HTML for the entire application and serve it from GitHub Pages."}]},{"type":"element","tag":"h2","props":{"id":"tailwind-css"},"children":[{"type":"text","value":"Tailwind CSS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind is a utility-first CSS framework packed with single-purpose classes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When paired with component-driven development, it lends itself to being a powerful and rapid way of writing mark-up."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<div\n  class=\"hidden flex-1 items-center justify-center space-x-5 sm:flex md:space-x-8\"\n>\n  <a\n    href=\"/projects/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Projects\n  </a>\n  <a\n    href=\"/leetcode/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Leetcode\n  </a>\n  <a\n    href=\"/contact/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Contact\n  </a>\n</div>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<div\n  class=\"hidden flex-1 items-center justify-center space-x-5 sm:flex md:space-x-8\"\n>\n  <a\n    href=\"/projects/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Projects\n  </a>\n  <a\n    href=\"/leetcode/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Leetcode\n  </a>\n  <a\n    href=\"/contact/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Contact\n  </a>\n</div>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"blog"},"children":[{"type":"text","value":"Blog"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Nuxt Content module provides a file-based headless CMS for Nuxt applications."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is useful during static site generation, as pages and routes can be rendered during "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It reads Markdown files from the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"content/"}]},{"type":"text","value":" directory and exposes them as an API to query and display them:"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"async asyncData({ $content }) {\n  const hackathons = await $content('projects')\n    .only([\n      'slug',\n      'title',\n      'subtitle',\n      'description',\n      'series',\n      'localimage',\n      'publishedAt',\n      'published',\n    ])\n    .where({ series: 'Hackathons' })\n    .sortBy('publishedAt', 'desc')\n    .fetch()\n  return {\n    hackathons,\n  }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"async asyncData({ $content }) {\n  const hackathons = await $content('projects')\n    .only([\n      'slug',\n      'title',\n      'subtitle',\n      'description',\n      'series',\n      'localimage',\n      'publishedAt',\n      'published',\n    ])\n    .where({ series: 'Hackathons' })\n    .sortBy('publishedAt', 'desc')\n    .fetch()\n  return {\n    hackathons,\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"github-pages"},"children":[{"type":"text","value":"GitHub Pages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub Pages is a free-to-use service for public repositories. It serves static files (HTML, CSS, and JavaScript) straight from a specific branch in a repository."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case, files are served from the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gh-pages/"}]},{"type":"text","value":" branch, which contains the outputs of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"domain"},"children":[{"type":"text","value":"Domain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default, the site is hosted at "},{"type":"element","tag":"a","props":{"href":"https://lloydtao.github.io/portfolio","rel":["nofollow"]},"children":[{"type":"text","value":"lloydtao.github.io/portfolio"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm able use the "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx","rel":["nofollow"]},"children":[{"type":"text","value":"lloyd.cx"}]},{"type":"text","value":" domain instead by setting up these DNS records to the IP addresses for GitHub Pages:"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Type"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Host"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Value"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.108.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.109.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.110.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.111.153"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"cicd"},"children":[{"type":"text","value":"CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Even as a solo contributor, it's useful to follow a branch-based pull request flow. By doing so, you're able to:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lint and test the site before merging into "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatically deploy changes pushed to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]},{"type":"text","value":" to GitHub Pages"}]}]},{"type":"element","tag":"h3","props":{"id":"continuous-integration"},"children":[{"type":"text","value":"Continuous integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The CI pipeline lints and tests the project. If these tasks complete successfully, then the branch can be merged."}]},{"type":"element","tag":"pre","props":{"className":["language-yaml"],"code":"name: portfolio ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: portfolio/\n\njobs:\n  ci:\n    name: Build and test portfolio\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - portfolio/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.4.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n","language":"yaml","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: portfolio ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: portfolio/\n\njobs:\n  ci:\n    name: Build and test portfolio\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - portfolio/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.4.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n"}]}]},{"type":"element","tag":"h3","props":{"id":"continuous-deployment"},"children":[{"type":"text","value":"Continuous deployment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The CD pipeline is structured similarly, and runs on "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]},{"type":"text","value":" after a PR is merged. It builds the static files with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn generate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn storybook build"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These files are deployed to GitHub Pages using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"github-pages-deploy-action"}]},{"type":"text","value":", which copies the contents of the outputted "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"dist/"}]},{"type":"text","value":" directory to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gh-pages/"}]},{"type":"text","value":" branch."}]},{"type":"element","tag":"pre","props":{"className":["language-yaml"],"code":"name: portfolio cd\n\non:\n  push:\n    branches:\n      - main\n\n    ...\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      ...\n\n      - name: Generate project\n        run: yarn generate\n\n      - name: Export storybook\n        run: yarn storybook build --output-dir \"dist/_storybook\"\n\n      - name: Deploy project to GitHub Pages\n        uses: JamesIves/github-pages-deploy-action@v4.4.0\n        with:\n          folder: portfolio/dist\n","language":"yaml","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: portfolio cd\n\non:\n  push:\n    branches:\n      - main\n\n    ...\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      ...\n\n      - name: Generate project\n        run: yarn generate\n\n      - name: Export storybook\n        run: yarn storybook build --output-dir \"dist/_storybook\"\n\n      - name: Deploy project to GitHub Pages\n        uses: JamesIves/github-pages-deploy-action@v4.4.0\n        with:\n          folder: portfolio/dist\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"nuxt","depth":2,"text":"Nuxt"},{"id":"tailwind-css","depth":2,"text":"Tailwind CSS"},{"id":"blog","depth":2,"text":"Blog"},{"id":"github-pages","depth":2,"text":"GitHub Pages","children":[{"id":"domain","depth":3,"text":"Domain"}]},{"id":"cicd","depth":2,"text":"CI/CD","children":[{"id":"continuous-integration","depth":3,"text":"Continuous integration"},{"id":"continuous-deployment","depth":3,"text":"Continuous deployment"}]}]}},"_type":"markdown","_id":"content:projects:portfolio.md","_source":"content","_file":"projects/portfolio.md","_extension":"md"},{"_path":"/projects/hackathons-junction-2021-keepchat-adaptive-hate-speech-filtering","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Junction 2021","description":"Programmable chat API with adaptive hate speech filtering","slug":"hackathons-junction-2021-keepchat-adaptive-hate-speech-filtering","subtitle":"KeepChat","series":"Hackathons","localimage":"/images/keepchat.png","publishedAt":"2021-11-21T09:00:00.000Z","tags":"machinelearning, ai, nlp","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"project"},"children":[{"type":"text","value":"Project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"KeepChat is an in-game chat service with superpowers, making the chat space friendly for everyone. Our vision is to keep chat safe and inclusive, without requiring constant attention from moderators."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At a high level, KeepChat consists of a three-tier architecture."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"KeepChat architecture","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/snlpvjozcshfgkzuydqy.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At the core of the system is the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"chat API"}]},{"type":"text","value":", which handles the business logic of the chat rooms. This includes storing messages, processing new messages from users, and processing flags."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When a new message is processed, the chat API asks the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"training and screening API"}]},{"type":"text","value":" whether the message should be filtered. The AI responds with a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":", and the backend will filter the message accordingly before storing it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"KeepChat admin panel","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgnteyb28xdlc6gqv46u.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When a flag is processed, the chat API tells the AI to add the flagged message to its bank of harmful messages, and then "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"re-train"}]},{"type":"text","value":" on this data. We envision expanding on this by requiring a certain number of flags or total user sociability score in order to add the message to the training data."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In order to demonstrate this functionality, a frontend "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"consumer application"}]},{"type":"text","value":" communicates with the backend by using its chat endpoints."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This demonstrates the plug-and-play nature of the application; integrating KeepChat into an existing application is incredibly simple, as screening messages and re-training on flagged messages is built-in to the service."}]},{"type":"element","tag":"h2","props":{"id":"teamwork"},"children":[{"type":"text","value":"Teamwork"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By splitting the project into the architecture mentioned prior, we were able to divide our team effectively. This involved giving individual team members ownership over some part of the system, and then exposing each part through a REST API, which kept the system loosely coupled."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The end result was a high development velocity within the team."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We leveraged Git and GitHub in order to distribute code between team members. It's important to prevent code-breaking changes from being pushed in a time-critical project, as these can block an entire team while the bug is fixed."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Therefore, any code changes went through a pull request, and we leveraged GitHub Actions in order to run quick code quality checks before accepting a PR."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"KeepChat pull requests","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31zhb27qs7w73sy5ul55.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"results"},"children":[{"type":"text","value":"Results"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"We didn't bring home the bacon this time. Interestingly, the winner of our challenge also built a chat service with adaptive filtering, including the ability to re-train on reported messages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, they managed to deploy their system to Google Cloud Platform, and provided a link to use their application. Considering the product-focused nature of the hackathon, we should have aimed to put our application online."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Results aside, I would definitely call this weekend a success. We managed to effectively execute on an identical product scope to the challenge winners, which validates our project on both the technical and product level."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"KeepChat team photo","src":"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhsh40jrvog60wxtg5w4.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Go KeepChat!"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"project","depth":2,"text":"Project"},{"id":"teamwork","depth":2,"text":"Teamwork"},{"id":"results","depth":2,"text":"Results"}]}},"_type":"markdown","_id":"content:projects:hackathons-junction-2021-keepchat-adaptive-hate-speech-filtering.md","_source":"content","_file":"projects/hackathons-junction-2021-keepchat-adaptive-hate-speech-filtering.md","_extension":"md"},{"_path":"/projects/hackathons-nasa-space-apps-covid-19-bunchup","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"NASA Space Apps COVID-19","description":"Online community builder and event scheduler to combat loneliness","slug":"hackathons-nasa-space-apps-covid-19-bunchup","subtitle":"Bunchup","series":"Hackathons","localimage":"/images/bunchup.png","publishedAt":"2020-05-30T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"project"},"children":[{"type":"text","value":"Project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Awaiting write-up..."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"project","depth":2,"text":"Project"}]}},"_type":"markdown","_id":"content:projects:hackathons-nasa-space-apps-covid-19-bunchup.md","_source":"content","_file":"projects/hackathons-nasa-space-apps-covid-19-bunchup.md","_extension":"md"},{"_path":"/projects/hackathons-met-office-2020-tropical-cyclone-visualiser","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Met Office Hackathon 2020","description":"Visualise the path, speed and intensity of historic tropical cyclones","slug":"hackathons-met-office-2020-tropical-cyclone-visualiser","subtitle":"Tropical cyclone visualiser","series":"Hackathons","localimage":"/images/tropical-cyclone.jpg","publishedAt":"2020-01-25T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"project"},"children":[{"type":"text","value":"Project"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Awaiting write-up..."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"project","depth":2,"text":"Project"}]}},"_type":"markdown","_id":"content:projects:hackathons-met-office-2020-tropical-cyclone-visualiser.md","_source":"content","_file":"projects/hackathons-met-office-2020-tropical-cyclone-visualiser.md","_extension":"md"}]