{"_path":"/projects/portfolio","_dir":"projects","_draft":false,"_partial":false,"_locale":"","title":"Portfolio","description":"Personal portfolio built with Nuxt, Tailwind and GitHub Pages","slug":"portfolio","subtitle":"","series":"Personal","localimage":"/images/portfolio.png","publishedAt":"2022-07-30T09:00:00.000Z","tags":"","published":true,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"My personal portfolio is a collection of my work, wrapped up in a snappy, responsive Nuxt application."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can view the source code here:\n"},{"type":"element","tag":"a","props":{"href":"https://github.com/lloydtao/portfolio","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/lloydtao/portfolio"}]}]},{"type":"element","tag":"h2","props":{"id":"nuxt"},"children":[{"type":"text","value":"Nuxt"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nuxt is a framework for building Vue applications, and includes features such as file-system routing and static site generation."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It leverages server-side rendering, where the server generates fully-rendered HTML for a page and sends it to the client. This removes the need for the client to render the page on the fly."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Combining server-side rendering with static site generation allows me to pre-build the HTML for the entire application and serve it from GitHub Pages."}]},{"type":"element","tag":"h2","props":{"id":"tailwind-css"},"children":[{"type":"text","value":"Tailwind CSS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Tailwind is a utility-first CSS framework packed with single-purpose classes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When paired with component-driven development, it lends itself to being a powerful and rapid way of writing mark-up."}]},{"type":"element","tag":"pre","props":{"className":["language-html"],"code":"<div\n  class=\"hidden flex-1 items-center justify-center space-x-5 sm:flex md:space-x-8\"\n>\n  <a\n    href=\"/projects/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Projects\n  </a>\n  <a\n    href=\"/leetcode/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Leetcode\n  </a>\n  <a\n    href=\"/contact/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Contact\n  </a>\n</div>\n","language":"html","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"<div\n  class=\"hidden flex-1 items-center justify-center space-x-5 sm:flex md:space-x-8\"\n>\n  <a\n    href=\"/projects/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Projects\n  </a>\n  <a\n    href=\"/leetcode/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Leetcode\n  </a>\n  <a\n    href=\"/contact/\"\n    class=\"font-semibold text-gray-50 duration-100 hover:text-gray-400\"\n  >\n    Contact\n  </a>\n</div>\n"}]}]},{"type":"element","tag":"h2","props":{"id":"blog"},"children":[{"type":"text","value":"Blog"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Nuxt Content module provides a file-based headless CMS for Nuxt applications."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is useful during static site generation, as pages and routes can be rendered during "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It reads Markdown files from the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"content/"}]},{"type":"text","value":" directory and exposes them as an API to query and display them:"}]},{"type":"element","tag":"pre","props":{"className":["language-js"],"code":"async asyncData({ $content }) {\n  const hackathons = await $content('projects')\n    .only([\n      'slug',\n      'title',\n      'subtitle',\n      'description',\n      'series',\n      'localimage',\n      'publishedAt',\n      'published',\n    ])\n    .where({ series: 'Hackathons' })\n    .sortBy('publishedAt', 'desc')\n    .fetch()\n  return {\n    hackathons,\n  }\n}\n","language":"js","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"async asyncData({ $content }) {\n  const hackathons = await $content('projects')\n    .only([\n      'slug',\n      'title',\n      'subtitle',\n      'description',\n      'series',\n      'localimage',\n      'publishedAt',\n      'published',\n    ])\n    .where({ series: 'Hackathons' })\n    .sortBy('publishedAt', 'desc')\n    .fetch()\n  return {\n    hackathons,\n  }\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"github-pages"},"children":[{"type":"text","value":"GitHub Pages"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"GitHub Pages is a free-to-use service for public repositories. It serves static files (HTML, CSS, and JavaScript) straight from a specific branch in a repository."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this case, files are served from the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gh-pages/"}]},{"type":"text","value":" branch, which contains the outputs of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"nuxt generate"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h3","props":{"id":"domain"},"children":[{"type":"text","value":"Domain"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"By default, the site is hosted at "},{"type":"element","tag":"a","props":{"href":"https://lloydtao.github.io/portfolio","rel":["nofollow"]},"children":[{"type":"text","value":"lloydtao.github.io/portfolio"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"I'm able use the "},{"type":"element","tag":"a","props":{"href":"https://lloyd.cx","rel":["nofollow"]},"children":[{"type":"text","value":"lloyd.cx"}]},{"type":"text","value":" domain instead by setting up these DNS records to the IP addresses for GitHub Pages:"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Type"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Host"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Value"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.108.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.109.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.110.153"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"A"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"@"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"185.199.111.153"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"cicd"},"children":[{"type":"text","value":"CI/CD"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Even as a solo contributor, it's useful to follow a branch-based pull request flow. By doing so, you're able to:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Lint and test the site before merging into "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Automatically deploy changes pushed to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]},{"type":"text","value":" to GitHub Pages"}]}]},{"type":"element","tag":"h3","props":{"id":"continuous-integration"},"children":[{"type":"text","value":"Continuous integration"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The CI pipeline lints and tests the project. If these tasks complete successfully, then the branch can be merged."}]},{"type":"element","tag":"pre","props":{"className":["language-yaml"],"code":"name: portfolio ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: portfolio/\n\njobs:\n  ci:\n    name: Build and test portfolio\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - portfolio/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.4.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n","language":"yaml","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: portfolio ci\n\non:\n  pull_request:\n    types:\n      - opened\n      - synchronize\n      - reopened\n\ndefaults:\n  run:\n    shell: bash\n    working-directory: portfolio/\n\njobs:\n  ci:\n    name: Build and test portfolio\n    runs-on: ${{ matrix.os }}\n\n    strategy:\n      matrix:\n        os:\n          - ubuntu-latest\n        node-version:\n          - 16.16.0\n        package-manager:\n          - yarn\n        lockfile:\n          - portfolio/yarn.lock\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v3.4.1\n        with:\n          node-version: ${{ matrix.node-version }}\n          cache: ${{ matrix.package-manager }}\n          cache-dependency-path: ${{ matrix.lockfile }}\n\n      - name: Install npm dependencies\n        run: yarn\n\n      - name: Lint project\n        run: yarn lint\n\n      - name: Test project\n        run: yarn test\n"}]}]},{"type":"element","tag":"h3","props":{"id":"continuous-deployment"},"children":[{"type":"text","value":"Continuous deployment"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The CD pipeline is structured similarly, and runs on "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"main/"}]},{"type":"text","value":" after a PR is merged. It builds the static files with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn generate"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"yarn storybook build"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"These files are deployed to GitHub Pages using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"github-pages-deploy-action"}]},{"type":"text","value":", which copies the contents of the outputted "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"dist/"}]},{"type":"text","value":" directory to the "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gh-pages/"}]},{"type":"text","value":" branch."}]},{"type":"element","tag":"pre","props":{"className":["language-yaml"],"code":"name: portfolio cd\n\non:\n  push:\n    branches:\n      - main\n\n    ...\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      ...\n\n      - name: Generate project\n        run: yarn generate\n\n      - name: Export storybook\n        run: yarn storybook build --output-dir \"dist/_storybook\"\n\n      - name: Deploy project to GitHub Pages\n        uses: JamesIves/github-pages-deploy-action@v4.4.0\n        with:\n          folder: portfolio/dist\n","language":"yaml","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"name: portfolio cd\n\non:\n  push:\n    branches:\n      - main\n\n    ...\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v3.0.2\n\n      ...\n\n      - name: Generate project\n        run: yarn generate\n\n      - name: Export storybook\n        run: yarn storybook build --output-dir \"dist/_storybook\"\n\n      - name: Deploy project to GitHub Pages\n        uses: JamesIves/github-pages-deploy-action@v4.4.0\n        with:\n          folder: portfolio/dist\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"nuxt","depth":2,"text":"Nuxt"},{"id":"tailwind-css","depth":2,"text":"Tailwind CSS"},{"id":"blog","depth":2,"text":"Blog"},{"id":"github-pages","depth":2,"text":"GitHub Pages","children":[{"id":"domain","depth":3,"text":"Domain"}]},{"id":"cicd","depth":2,"text":"CI/CD","children":[{"id":"continuous-integration","depth":3,"text":"Continuous integration"},{"id":"continuous-deployment","depth":3,"text":"Continuous deployment"}]}]}},"_type":"markdown","_id":"content:projects:portfolio.md","_source":"content","_file":"projects/portfolio.md","_extension":"md"}